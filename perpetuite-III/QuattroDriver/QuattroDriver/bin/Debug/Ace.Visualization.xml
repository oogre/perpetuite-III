<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ace.Visualization</name>
    </assembly>
    <members>
        <member name="T:Ace.Visualization.Collisions.Boundary.OBB">
            <summary>
            An Object Bounding Box
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBB.MinCorner">
            <summary>
            Minimum corner of bounding box
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBB.MaxCorner">
            <summary>
            Maximum corner of bounding box (MinCorner + Size)
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBB.Center">
            <summary>
            Center of bounding box (MaxCorner + MinCorner) / 2
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBB.Size">
            <summary>
            Size of bounding box (MaxCorner - MinCorner)
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBB.HalfSize">
            <summary>
            Half-Size of BoundingBox (Size / 2)
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.OBB"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.#ctor(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.OBB"/> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.Contains(Ace.Visualization.DxVector)">
            <summary>
            BoundingBox contains 'point'
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.Contains(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Determines whether a triangle is completely in the bounding volume.
            </summary>
            <param name="triVertex0">The first vertex.</param>
            <param name="triVertex1">The second vertex.</param>
            <param name="triVertex2">The third vertex.</param>
            <returns>
              <c>true</c> if the triangle is contained in the bounding region; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.HitTest(Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single@)">
            <summary>
            Test if the pick ray intersects the bonding box.
            </summary>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray direction.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            Does the ray intersect the bounding box
            </returns>
            <remarks>
            This algorithm was taken from the book 3D Math Primer for Graphics and Game Development.
            </remarks>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.Intersects(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Calculate if the triangle intersects the bounding volume
            </summary>
            <param name="triVertex0">The first vertex.</param>
            <param name="triVertex1">The second vertex.</param>
            <param name="triVertex2">The third vertex.</param>
            <returns>
            Does the triangle intersect the volume
            </returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.Translate(Ace.Visualization.DxTransform)">
            <summary>
            Translates the ABBB by the specified offset.
            </summary>
            <param name="offset">The offset.</param>
            <returns>The translated OBB</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBB.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Boundary.OBBGenerator">
            <summary>
            Helper class that can generate an OBB for an ICollidableResource
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBGenerator.OBBGenerated">
            <summary>
            Gets or sets an action invoked when an OBB is generated
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBGenerator.Item(System.String)">
            <summary>
            Gets the <see cref="T:Ace.Visualization.Collisions.Boundary.OBBTree" /> associated with the specified resource.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Collisions.Boundary.OBBTree" />.
            </value>
            <param name="resourceKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.OBBGenerator"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.Contains(System.String)">
            <summary>
            Determines whether the resource is already in the OBB generator
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>
              <c>true</c> if the resource is associated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.AddResources(System.Collections.Generic.IEnumerable{Ace.Visualization.Collisions.ICollidableResource})">
            <summary>
            Adds the resources.
            </summary>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.AddResource(Ace.Visualization.Collisions.ICollidableResource)">
            <summary>
            Adds the resource to the generator
            </summary>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.RemoveResource(System.String)">
            <summary>
            Removes the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBGenerator.GenerateOBB(System.Object)">
            <summary>
            Generates the obb.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:Ace.Visualization.Collisions.Boundary.OBBTree">
            <summary>
            Represents an Objecct bounding tree for storing Faces (set of 3 verteces)
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.Vertices">
            <summary>
            Gets the vertices.
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.Faces">
            <summary>
            Gets the trianges that make up the mesh
            </summary>
            <value>
            The faces
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.NonEmptyLeafNodes">
            <summary>
            Gets the non-empty leaf nodes.
            </summary>
            <value>
            The non-empty leaf nodes.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.VertexCount">
            <summary>
            Return the number of stored vertices.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.FaceCount">
            <summary>
            Gets the number of faces in the mesh.
            </summary>
            <value>
            The face count.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.Root">
            <summary>
            Gets the root.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.MaxNodeSize">
            <summary>
            Maximum allowable node size (size of the OBB)
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.MaxNodeDepth">
            <summary>
            Maximum allowable recursion depth for building the KDTree
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.BuildTime">
            <summary>
            Gets the build time in ms.
            </summary>
            <value>
            The build time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.HitTestTime">
            <summary>
            Gets the hit test time in ms.
            </summary>
            <value>
            The hit test time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTree.Depth">
            <summary>
            Gets the depth of the tree
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.OBBTree"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.AddPoints(System.Collections.Generic.IEnumerable{Ace.Visualization.DxVector})">
            <summary>
            Add a new collection of vertices to the tree.
            </summary>
            <param name="vertices">The vertices.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.AddFaces(System.Collections.Generic.IEnumerable{Ace.Visualization.Collisions.Boundary.Triangle})">
            <summary>
            Adds the faces.
            </summary>
            <param name="faces">The faces.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.Build">
            <summary>
            Build KDTree
            </summary>
            <notes>
            Points are added via KDTree.AddPoint(s) methods, the Build process uses
            those points to create the final tree.  If new points are added after a
            tree has been built, a new tree must be created.
            </notes>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.HitTest(Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single@)">
            <summary>
            Performs a hit test agains the mesh
            </summary>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDirection">The pick ray direction.</param>
            <param name="distance">The distance.</param>
            <returns>Was an intersection detected</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.HitTest(Ace.Visualization.Collisions.Boundary.OBBTreeNode,Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single@)">
            <summary>
            Performs a hit test agains the node
            </summary>
            <param name="node">The node.</param>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDirection">The pick ray direction.</param>
            <param name="distance">The distance.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.Clear">
            <summary>
            Purge vertex memory and root
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.SplitNode(Ace.Visualization.Collisions.Boundary.OBBTreeNode,System.Int32)">
            <summary>
            Recursively split node across its pivot axis.
            </summary>
            <param name="node">KDTreeNode to split</param>
            <param name="depth">Current recursion depth, set lower if you get stack overflow</param>
            <returns>True if split was a success or max_depth/max_node_size criterion met</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.IndexLeafs(Ace.Visualization.Collisions.Boundary.OBBTreeNode)">
            <summary>
            Iterate over the leafs and build index strctures for faster lookup
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.FindLeaf(Ace.Visualization.DxVector,System.Boolean)">
            <summary>
            Find the leaf node that is closest to the specified point
            </summary>
            <param name="point">The point.</param>
            <param name="mustContain">if set to <c>true</c> the point must be contained in the bounds.</param>
            <returns>
            The matching leaf or null, if there is no matching leaf
            </returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTree.FindLeaf(Ace.Visualization.Collisions.Boundary.OBBTreeNode,Ace.Visualization.DxVector,System.Boolean)">
            <summary>
            Find the leaf that contains the point
            </summary>
            <param name="node">The node.</param>
            <param name="point">The point.</param>
            <param name="mustContain">if set to <c>true</c> the point must be contained in the bounds.</param>
            <returns>
            The closest leaf or null if no leaf contains the point
            </returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Boundary.OBBTreeNode">
            <summary>
            Represents a node in the Object Bounding Box Tree
            </summary>
        </member>
        <member name="T:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Axis">
            <summary>
            The axis along which the OBB node will be split
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.SplitAxis">
            <summary>
            Axis across which the data are split.  
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.OBB">
            <summary>
            Node object bounding box, bounds vertex data.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Pivot">
            <summary>
            Node split pivot.  Will be the center of the data
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Parent">
            <summary>
            Node parent.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Sibling">
            <summary>
            Node sibling.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Indices">
            <summary>
            Buffered list of indexes for all faces entirely in the region
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.InteresctingIndices">
            <summary>
            Buffered list of indexes for all faces that intersect the region but are not wholly in the region
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.IsBuilt">
            <summary>
            True iff node has been built, used internall for lazy initialization of certain class members. 
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.IsLeaf">
            <summary>
            Gets if this instance is a leaf
            </summary>
            <value>
              <c>true</c> if this instance is leaf; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.OBBTreeNode.ContainsData">
            <summary>
            Gets a value indicating whether the node contains any data.
            </summary>
            <value>
              <c>true</c> if the node contains data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.OBBTreeNode"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.AddFace(System.Int32,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Add a new vertex, and its index, to node.
            </summary>
            <param name="index">Index in to KDTree's vertices List</param>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Build">
            <summary>
            Utility method to build KDTreeNode variables, as long as min and max
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.Child(System.Int32)">
            <summary>
            Get child node.
            </summary>
            <param name="index">Child index, must been either 0 or 1</param>
            <returns>Child node if 'index' is correct, otherwise null.</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.CreateChildNodes">
            <summary>
            Creates the child nodes.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.OBBTreeNode.GetSplitNode(Ace.Visualization.DxVector)">
            <summary>
            Return the OBBTreeNode that the vertext belongs to according to the split axis.
            </summary>
            <param name="vertex">The vertex to find</param>
            <returns>KDTreeNode containing 'vertex'</returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Boundary.Triangle">
            <summary>
            Represents indexes in an OBB Triangle
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.Triangle.V1Index">
            <summary>
            Gets the index of the first vertex 
            </summary>
            <value>
            The vertex
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.Triangle.V2Index">
            <summary>
            Gets the index of the second vertex
            </summary>
            <value>
            The vertex
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Boundary.Triangle.V3Index">
            <summary>
            Gets the index of the third vertex
            </summary>
            <value>
            The vertex
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.Triangle.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Boundary.Triangle"/> class.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.Min(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Find the minimum Vector3 of 2 vectors. Min value is compared along all axes 
            </summary>
            <example>Min((1,0,10),(2,0,0)) = (1,0,0)</example>
            <returns>Min Vector3 across all axes</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.Max(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Find the maximum Vector3 of 2 vectors. Max value is compared along all axes 
            </summary>
            <example>Max((1,0,10),(2,0,0)) = (2,0,10)</example>
            <returns>Max Vector3 across all axes</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.LargestAxis(Ace.Visualization.DxVector)">
            <summary>
            Get the largest axis 
            </summary>
            <returns>Largest enumerated axis</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.Cell(Ace.Visualization.DxVector,System.Int32)">
            <summary>
            Return the value associated with the specified index
            </summary>
            <param name="v">The vector.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.IntersectTest(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Performs an intersection test on a triangle defined by 3 vertices
            </summary>
            <param name="p0">The first vertex.</param>
            <param name="p1">The second vertex.</param>
            <param name="p2">The third vertex.</param>
            <param name="pickRayO">The ray origin.</param>
            <param name="pickRayD">The ray direction.</param>
            <returns>The distance to the intersection point</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Boundary.VertextMath.ClosestPointOnTriangle(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Find the closest point on the triangle to the input point
            </summary>
            <param name="p0">The first vertex.</param>
            <param name="p1">The second vertex.</param>
            <param name="p2">The third vertex.</param>
            <param name="point">The input point.</param>
            <returns>The closest point on the triangle</returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.CollisionCheck">
            <summary>
            Represents a single check between two resources
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionCheck.Configuration">
            <summary>
            Gets the collision configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionCheck.FirstInstance">
            <summary>
            The instance information for the first object in the collision check
            </summary>
            <value>
            The first instance information
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionCheck.SecondInstance">
            <summary>
            The instance information for the second object in the collision check
            </summary>
            <value>
            The second instance information
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionCheck.ElapsedMilliseconds">
            <summary>
            Gets the time for the last collision check / attempt.
            </summary>
            <value>
            The time it took to check the collisions.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionCheck.#ctor(Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.CollisionCheck" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionCheck.MarkCheckDone">
            <summary>
            Mark that the collision check has completed
            </summary>
        </member>
        <member name="T:Ace.Visualization.Collisions.CollisionManager">
            <summary>
            Manager that oversees the checking of collisions between resources
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionManager.IsHardwareCompatible">
            <summary>
            Returns if the PC hardware is able to perform collision detection
            </summary>
            <value>returns true if the Hardware is compatible, false if not.</value>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionManager.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.CollisionManager.IsWorking">
            <summary>
            Gets a value indicating whether teh collision manager is working 
            </summary>
            <value>
            <c>true</c> if this instance is working; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.CollisionManager"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.Start">
            <summary>
            Initializes the collision manager.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.Stop">
            <summary>
            Stops the collision manager from running.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.AddCheck(Ace.Visualization.Collisions.CollisionCheck[])">
            <summary>
            Adds the check to the list of collisions to monitor
            </summary>
            <param name="checkList">The list of checks to add.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.RemoveResources(System.String[])">
            <summary>
            Removes the resources from the collision system
            </summary>
            <param name="keyNames">The key names.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.AddOBBToCollisionEngine(System.String,Ace.Visualization.Collisions.Boundary.OBBTree)">
            <summary>
            Adds the OBB to the collision engine.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="tree">The tree.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.BackgroundMain">
            <summary>
            The background thread performing collision calculations.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.CollisionManager.PerformCollisionCheck(Ace.Visualization.Collisions.CollisionCheck)">
            <summary>
            Performs a collision check.
            </summary>
            <param name="check">The check.</param>
            <returns>Was a collision detected</returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer">
            <summary>
            Represents a buffer of distance results
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.ResultBuffer">
            <summary>
            Gets the results buffer on the GPU
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.PCBuffer">
            <summary>
            Gets the results buffer that can be read by the PC
            </summary>
            <value>
            The buffer 
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.ResultView">
            <summary>
            Gets the resource view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.#ctor(SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.Apply(SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Applies the buffer to the immediate context
            </summary>
            <param name="immediateContext">The immediate context.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultDistanceBuffer.PullData(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Pulls the data from the GPU to the CPU
            </summary>
            <param name="device">The device.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.ConstantBuffers">
            <summary>
            Buffers used in collision detection
            </summary>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.ConstantBuffers.PerCollision">
            <summary>
            Constants for each collision detection operation
            </summary>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.DxCollisionEngine">
            <summary>
            Manages the DirectX handles for the collision management
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxCollisionEngine.Direct3DDevice">
            <summary>
            Gets the Direct3D11 device.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxCollisionEngine.Direct3DContext">
            <summary>
            Gets the Direct3D11 immediate context.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Handles.DxCollisionEngine"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.CreateDirect3DHandles">
            <summary>
            Creates the handles for all Direct3D objects.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.CreateFixedResources">
            <summary>
            Creates the compute shaders.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.MapOBBTree(System.String,Ace.Visualization.Collisions.Boundary.OBBTree)">
            <summary>
            Maps the OBBTree to the GPU as an input vertex buffer.
            For large data sets, we will break it into multiple
            GPU buffers. This will prevent the locking up of the GPU
            for large operations
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="tree">The tree.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.RemoveResource(System.String)">
            <summary>
            Removes the resource associated with the resource key
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.CompareResources(System.String,SharpDX.Matrix,System.String,SharpDX.Matrix)">
            <summary>
            Compares the resources.
            </summary>
            <param name="resourceKey1">The resource key1.</param>
            <param name="position1">The position offset of the first resource.</param>
            <param name="resourceKey2">The resource key2.</param>
            <param name="position2">The position offset of the second resource.</param>
            <returns>Was a collision detected</returns>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxCollisionEngine.Dispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.DxResultBuffer">
            <summary>
            Represents a buffer of results
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultBuffer.ResultBuffer">
            <summary>
            Gets the results buffer on the GPU
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultBuffer.PCBuffer">
            <summary>
            Gets the results buffer that can be read by the PC
            </summary>
            <value>
            The buffer 
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxResultBuffer.ResultView">
            <summary>
            Gets the resource view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultBuffer.#ctor(SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Handles.DxResultBuffer" /> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultBuffer.Apply(SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Applies the buffer to the immediate context
            </summary>
            <param name="immediateContext">The immediate context.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxResultBuffer.PullData(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Pulls the data from the GPU to the CPU
            </summary>
            <param name="device">The device.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Collisions.Handles.DxVertexBuffer">
            <summary>
            Represents an buffer of (input) vertexes used in collision checking
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxVertexBuffer.BufferLength">
            <summary>
            Gets the length of the buffer.
            </summary>
            <value>
            The length of the buffer.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxVertexBuffer.VertexBuffer">
            <summary>
            Gets the vertex buffer.
            </summary>
            <value>
            The vertex buffer.
            </value>
        </member>
        <member name="P:Ace.Visualization.Collisions.Handles.DxVertexBuffer.ShaderView">
            <summary>
            Gets the resource view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxVertexBuffer.#ctor(SharpDX.Direct3D11.DeviceContext,SharpDX.Vector3[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Collisions.Handles.DxVertexBuffer" /> class.
            </summary>
            <param name="context">The context.</param>
            <param name="vectors">The vectors.</param>
        </member>
        <member name="M:Ace.Visualization.Collisions.Handles.DxVertexBuffer.Apply(SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Applies the buffer to the immediate context
            </summary>
            <param name="immediateContext">The immediate context.</param>
            <param name="index">The index.</param>
        </member>
        <member name="T:Ace.Visualization.Collisions.ICollidableResource">
            <summary>
            Represents a resource that can be included in a collision detection operation
            </summary>
        </member>
        <member name="P:Ace.Visualization.Collisions.ICollidableResource.KeyName">
            <summary>
            Gets or sets the name of the key used to identify this resource.
            </summary>
            <value>
            The name of the key identifying the resource
            </value>
        </member>
        <member name="M:Ace.Visualization.Collisions.ICollidableResource.GetVertexData(Ace.Visualization.DxVector[]@,Ace.Visualization.Collisions.Boundary.Triangle[]@)">
            <summary>
            Gets the vertex data associated with the collidable resource
            </summary>
            <param name="vertexData">The vertex data.</param>
            <param name="faces">The indexes defining the faces.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm">
            <summary>
            Edits/Creates a new collision configuration
            </summary>
            <seealso cref="T:System.Windows.Forms.Form" />
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.SelectedSource">
            <summary>
            Gets the selected source.
            </summary>
            <value>
            The selected source.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.#ctor(Ace.Visualization.Resources.Abstract3DObject[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.InitializeDisplay">
            <summary>
            Initializes the display of objects / visibility controls
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.GetFolderNode(System.Windows.Forms.TreeNodeCollection,System.String)">
            <summary>
            Gets the folder node for the specified name
            </summary>
            <param name="nodes">The nodes to search for the next level of the category.</param>
            <param name="name">The name.</param>
            <returns>The tree node to find</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.treeView_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handles the AfterSelect event of the treeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.TreeViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.buttonClose_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonClose control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionSourceSelectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.CollisionConfigurationControl">
            <summary>
            Display the configuration of collision checks
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.CollisionConfigurationControl" /> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.UpdateRowDisplay(System.Windows.Forms.DataGridViewRow,Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Updates the row display
            </summary>
            <param name="row">The row.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.dataGridView_RowStateChanged(System.Object,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
            <summary>
            Handles the RowStateChanged event of the dataGridView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.buttonAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAdd control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.buttonDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonDelete control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.timerUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timerUpdate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.DataGridView_CurrentCellDirtyStateChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CurrentCellDirtyStateChanged event of the DataGridView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.dataGridView_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Handles the CellValueChanged event of the dataGridView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.CollisionConfigurationControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.VisibilityDisplayControl">
            <summary>
            Represents the visibility on/of control display
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.VisibilityDisplayControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.InitializeDisplay">
            <summary>
            Initializes the display of objects / visibility controls
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.GetFolderNode(System.Windows.Forms.TreeNodeCollection,System.String)">
            <summary>
            Gets the folder node for the specified category
            </summary>
            <param name="nodes">The nodes to search for the next level of the category.</param>
            <param name="category">The category.</param>
            <returns>The tree node to find</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.SetVisibility(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Sets the visibility.
            </summary>
            <param name="node">The node.</param>
            <param name="isChecked">if set to <c>true</c> the node is checked.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.CheckNodeStates(System.Windows.Forms.TreeNode)">
            <summary>
            Checks the states of all child nodes
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.CheckNodeStates(System.Windows.Forms.TreeNode,System.Int32@,System.Int32@)">
            <summary>
            Checks the states of all child nodes returning the counts for all
            nodes that are associated with a visibility grouping
            </summary>
            <param name="node">The node.</param>
            <param name="totalNodeCount">The total node count.</param>
            <param name="checkedNodeCount">The number of nodes that are checked.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.treeView_AfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handles the AfterCheck event of the treeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.TreeViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.treeView_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handles the AfterSelect event of the treeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.TreeViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.VisibilityDisplayControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers">
            <summary>
            Define constant buffers mapped to the GPU
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers.PerObject">
            <summary>
            Per Object constant buffer (matrices)
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ConstantBuffers.PerObject.Transpose">
            <summary>
            Transpose the matrices so that they are in row major order for HLSL
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers.DirectionalLight">
            <summary>
            Directional light
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers.PerFrame">
            <summary>
            Per frame constant buffer (camera position)
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers.PerMaterial">
            <summary>
            Per material constant buffer
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ConstantBuffers.PerSprite">
            <summary>
            Per Sprite buffer
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.DxPointCapture">
            <summary>
            Point capture information associated with a DxDevice
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxPointCapture.Target">
            <summary>
            Gets or sets the object that should capure point input.
            </summary>
            <value>
            The object that captures mouse clicks
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxPointCapture.Index">
            <summary>
            Gets the index associated with the point capture
            </summary>
            <value>
            The index of the point capture.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxPointCapture.Enabled">
            <summary>
            Gets a value indicating whether point capture mode is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxPointCapture.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxPointCapture" /> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxPointCapture.Update(Ace.Visualization.Resources.Abstract3DObject,System.Int32)">
            <summary>
            Changes the object that captures mouse clicks
            </summary>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxPointCapture.Clear">
            <summary>
            Diusables the point tracking status
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxPointCapture.Validate">
            <summary>
            Validates the status of the point capture target object
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs">
            <summary>
            Describes the active rendered frame
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs.Bitmap">
            <summary>
            Gets the bitmap associated with the rendered frame.
            </summary>
            <value>
            The bitmap.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs.Frame">
            <summary>
            Gets the frame associated with the rendering
            </summary>
            <value>
            The frame.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs.CancelBitmapDispose">
            <summary>
            Gets a value indicating whether the disposing of the bitmap should be canceled.
            </summary>
            <value>
              <c>true</c> if the disposing should be skipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs.#ctor(System.Drawing.Bitmap,Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxRenderedFrameEventArgs" /> class.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="frame">The frame.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Handles.DeviceManager">
            <summary>
            Represents a device manager with the basic rendering resources
            </summary>
            <seealso cref="T:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase" />
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Owner">
            <summary>
            Gets the owner of the device
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Bounds">
            <summary>
            Gets the configured bounds of the control used to render to
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CurrentBounds">
            <summary>
            Gets the current bounds of the control used to render to
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.SwapChain">
            <summary>
            Gets the <see cref="T:SharpDX.DXGI.SwapChain1"/> created by this
            instance.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.DisplayModeList">
            <summary>
            Provides access to the list of available display modes.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Width">
            <summary>
            Width of the swap chain buffers.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Height">
            <summary>
            Height of the swap chain buffers.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Viewport">
            <summary>
            Gets or sets the default viewport.
            </summary>
            <value>
            The viewport.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.RenderTargetBounds">
            <summary>
            Gets or sets the render target bounds.
            </summary>
            <value>
            The render target bounds.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.RenderTargetSize">
            <summary>
            Gets the size of the render target.
            </summary>
            <value>
            The size of the render target.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.RenderTargetView">
            <summary>
            Gets the Direct3D RenderTargetView used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.SecondaryRenderTargetView">
            <summary>
            Gets the Direct3D SecondaryRenderTargetView used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.BackBuffer">
            <summary>
            Gets or sets the BackBuffer used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.SecondaryBackBuffer">
            <summary>
            Gets or sets the secondary BackBuffer used by this app.
            This buffer will not contain any tiles
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.DepthBuffer">
            <summary>
            Gets or sets the depthBuffer used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.DepthStencilView">
            <summary>
            Gets the Direct3D DepthStencilView used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.BitmapTarget2D">
            <summary>
            Gets the Direct2D RenderTarget used by this app.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Resources">
            <summary>
            Gets the resources associated with the display.
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Handles.DeviceManager" /> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Initialize(System.Single)">
            <summary>
            Initialize the attached DeviceManager and trigger an initial
            OnSizeChanged event.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.SizeChanged(System.Boolean)">
            <summary>
            Trigger the OnSizeChanged event if the width and height
            of the <see cref="P:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CurrentBounds"/> differs to the
            last call to SizeChanged.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateDeviceDependentResources">
            <summary>
            Create device dependent resources
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateSizeDependentResources">
            <summary>
            Create size dependent resources, in this case the swap chain and render targets
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateSizeDependentDirect3DResources">
            <summary>
            Creates the size dependent direct3 d resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateSizeDependentDirect2DResources">
            <summary>
            Creates the size dependent direct2 d resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Present">
            <summary>
            Present the back buffer of the swap chain.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateSwapChainDescription">
            <summary>
            Creates the swap chain description.
            </summary>
            <returns>A swap chain description</returns>
            <remarks>
            This method can be overloaded in order to modify default parameters.
            </remarks>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.CreateSwapChain(SharpDX.DXGI.Factory,SharpDX.Direct3D11.Device,SharpDX.DXGI.SwapChainDescription)">
            <summary>
            Creates the swap chain.
            </summary>
            <param name="factory">The DXGI factory</param>
            <param name="device">The D3D11 device</param>
            <param name="desc">The swap chain description</param>
            <returns>An instance of swap chain</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManager.Dispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="E:Ace.Visualization.Display.Primitives.Handles.DeviceManager.OnSizeChanged">
            <summary>
            Event fired when size of the underlying render control is changed
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase">
            <summary>
            Helper class that manages all general DirectX handles
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Direct3DDevice">
            <summary>
            Gets the Direct3D11 device.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Direct3DContext">
            <summary>
            Gets the Direct3D11 immediate context.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Direct2DFactory">
            <summary>
            Gets the Direct2D factory.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Direct2DDevice">
            <summary>
            Gets the Direct2D device.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Direct2DContext">
            <summary>
            Gets the Direct2D context.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.DirectWriteFactory">
            <summary>
            Gets the DirectWrite factory.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.WICFactory">
            <summary>
            Gets the WIC factory.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.IsDirect2DAvaiable">
            <summary>
            Gets a value indicating whether Direct2D is avaiable.
            </summary>
            <value>
            <c>true</c> if Direct2D is avaiable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Dpi">
            <summary>
            Gets or sets the DPI.
            </summary>
            <remarks>
            This method will fire the event <see cref="E:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.OnDpiChanged"/>
            if the dpi is modified.
            </remarks>
        </member>
        <member name="E:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.OnInitialize">
            <summary>
            This event is fired when the DeviceManager is initialized by the <see cref="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Initialize(System.Single)"/> method.
            </summary>
        </member>
        <member name="E:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.OnDpiChanged">
            <summary>
            This event is fired when the <see cref="P:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Dpi"/> is called,
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.Initialize(System.Single)">
            <summary>
            Initialize this instance.
            </summary>
            <param name="dpi">The dpi setting.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.CreateDeviceDependentResources">
            <summary>
            Creates the device dependent resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.CreateInstances">
            <summary>
            Creates device manager objects
            </summary>
            <remarks>
            This method is called at the initialization of this instance.
            </remarks>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.CreateDirect3DHandles">
            <summary>
            Creates the handles for all Direct3D objects.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DeviceManagerBase.CreateDirect2DHandles">
            <summary>
            Creates the handles for all Direct2D handles
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Handles.DisplayResources">
            <summary>
            Base class for managing resources used for rendering
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Handles.DisplayResources.DeviceManager">
            <summary>
            Gets the device manager.
            </summary>
            <value>
            The device manager.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.#ctor(Ace.Visualization.Display.Primitives.Handles.DeviceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Handles.DisplayResources" /> class.
            </summary>
            <param name="deviceManager">The device manager.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddVertexShader(System.String,System.String,SharpDX.Direct3D11.InputElement[])">
            <summary>
            Adds a vertex shader and vertex layout
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="hlslFile">The HLSL file.</param>
            <param name="inputElements">The input elements.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddPixelShader(System.String,System.String,SharpDX.Direct3D.ShaderMacro[])">
            <summary>
            Adds the pixel shader.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="hlslFile">The HLSL file.</param>
            <param name="defines">The defines.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddBuffer(System.String,System.Int32)">
            <summary>
            Adds a general data buffer
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="bufferSize">Size of the buffer.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddBuffer``1(System.String,SharpDX.Direct3D11.BindFlags,``0[])">
            <summary>
            Adds the buffer of the specified type
            </summary>
            <typeparam name="T">The type of buffer to add</typeparam>
            <param name="keyName">Name of the key.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddDepthStencilState(System.String,SharpDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
            Adds a depth stencil state
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddRasterizerState(System.String,SharpDX.Direct3D11.RasterizerStateDescription)">
            <summary>
            Adds a rasterizer state
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddBlendState(System.String,SharpDX.Direct3D11.BlendStateDescription)">
            <summary>
            Adds a blend state
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddTexture(System.String,System.String)">
            <summary>
            Adds the texture.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddTexture(System.String,System.Drawing.Bitmap)">
            <summary>
            Adds the texture.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.RemoveTexture(System.String)">
            <summary>
            Removes a texture associated with a key name
            </summary>
            <param name="keyName">Name of the key.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.AddSamplerState(System.String,SharpDX.Direct3D11.SamplerStateDescription)">
            <summary>
            Adds the sampler state.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetPixelShader(System.String)">
            <summary>
            Gets the shader of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetVertexShader(System.String)">
            <summary>
            Gets the shader of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetInputLayout(System.String)">
            <summary>
            Gets the input layout of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetBuffer(System.String)">
            <summary>
            Gets the buffer of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetDepthSencilState(System.String)">
            <summary>
            Gets the depth stencil state of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetRasterizerState(System.String)">
            <summary>
            Gets the rasterizer state of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetBlendState(System.String)">
            <summary>
            Gets the blend state of the specified name
            </summary>
            <param name="keyName">The key name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetTexture(System.String)">
            <summary>
            Gets the texture of the specified name
            </summary>
            <param name="keyName">Name of the key.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.GetSamplerState(System.String)">
            <summary>
            Gets the sampler state of the specified name
            </summary>
            <param name="keyName">Name of the key.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.Dispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.CreateTexture2DFromFile(SharpDX.Direct3D11.Device,System.String)">
            <summary>
            Creates the texture from a 2D file
            </summary>
            <param name="device">The device.</param>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.CreateTextureFrom2DBitmap(SharpDX.Direct3D11.Device,System.Drawing.Bitmap)">
            <summary>
            Creates the texture From a 2D bitmap.
            </summary>
            <param name="device">The device.</param>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.LoadBitmap(System.String)">
            <summary>
            Loads the bitmap from the specified file
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.LoadBitmap(System.IO.Stream,SharpDX.WIC.BitmapDecoder@)">
            <summary>
            Loads the bitmap from the specified file
            </summary>
            <param name="bitmapStream">The bitmap stream.</param>
            <param name="decoder">The decoder.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.CreateTexture2DFromBitmap(SharpDX.Direct3D11.Device,SharpDX.WIC.BitmapSource)">
            <summary>
            Creates the texture from a 2D bitmap.
            </summary>
            <param name="device">The device.</param>
            <param name="bsource">The bsource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.SaveToBitmap(Ace.Visualization.Display.Primitives.Handles.DeviceManager,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Saves a Texture2D to a bitmap
            </summary>
            <param name="deviceManager">The device manager.</param>
            <param name="source">The source.</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.CopyToTexture(SharpDX.Direct3D11.DeviceContext,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Int32)">
            <summary>
            Copies from a source texture to a destination texture.
            </summary>
            <param name="context">The context.</param>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="subResource">The sub resource.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.PixelFormatFromFormat(SharpDX.DXGI.Format)">
            <summary>
            Convert pixel format from DXZI to WIC format
            </summary>
            <param name="format">The format.</param>
            <returns>The WIC pixel format</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Handles.DisplayResources.BitsPerPixel(SharpDX.DXGI.Format)">
            <summary>
            Determins the Bits Per Pixel corresponding to the DXGI format
            </summary>
            <param name="fmt">The FMT.</param>
            <returns>The bits per pixel</returns>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.BackgroundAceMesh">
            <summary>
            A base class for rendering the background
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.BackgroundAceMesh.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.BackgroundAceMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the mesh to the DirectX subsystem.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.BackgroundAceMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,System.Drawing.Color)">
            <summary>
            Creates the mesh.
            </summary>
            <param name="device">The device associated with the mesh.</param>
            <param name="defaultColor">The default color for the mesh.</param>
            <exception cref="T:System.InvalidOperationException">Mesh already created</exception>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex">
            <summary>
            Defines the various DirectX vertex formates that can be created
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex">
            <summary>
            Vertex input structure: Position, Normal and Color
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(SharpDX.Vector3)">
            <summary>
            Create vertex with position (normal will be based on position and color will be white)
            </summary>
            <param name="position">Vertex position</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(SharpDX.Vector3,SharpDX.Color)">
            <summary>
            Create vertex with position and color (normal will be based on position)
            </summary>
            <param name="position">Vertex position</param>
            <param name="color">Vertex color</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create vertex with position from individual components (normal will be calculated and color will be white)
            </summary>
            <param name="pX">X</param>
            <param name="pY">Y</param>
            <param name="pZ">Z</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(System.Single,System.Single,System.Single,SharpDX.Color)">
            <summary>
            Create vertex with position and color from individual components (normal will be calculated)
            </summary>
            <param name="pX">X</param>
            <param name="pY">Y</param>
            <param name="pZ">Z</param>
            <param name="color">color</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SharpDX.Color)">
            <summary>
            Create vertex with position, normal and color from individual components
            </summary>
            <param name="pX"></param>
            <param name="pY"></param>
            <param name="pZ"></param>
            <param name="nX"></param>
            <param name="nY"></param>
            <param name="nZ"></param>
            <param name="color"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(System.Single,System.Single,System.Single,SharpDX.Vector3,SharpDX.Color)">
            <summary>
            Create vertex with position from individual components and normal and color
            </summary>
            <param name="pX"></param>
            <param name="pY"></param>
            <param name="pZ"></param>
            <param name="normal"></param>
            <param name="color"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Color)">
            <summary>
            Create vertex with position, normal and color
            </summary>
            <param name="position"></param>
            <param name="normal"></param>
            <param name="color"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalColoredVertex.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Color,SharpDX.Vector2)">
            <summary>
            Create vertex with position, normal, color, uv coordinates
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <param name="color">The color.</param>
            <param name="uv">The uv.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex">
            <summary>
            Vertex input structure: Position and Normal
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex.#ctor(SharpDX.Vector3)">
            <summary>
            Create vertex with position and color (normal will be based on position)
            </summary>
            <param name="position">Vertex position</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create vertex with position from individual components (normal will be calculated)
            </summary>
            <param name="pX">X</param>
            <param name="pY">Y</param>
            <param name="pZ">Z</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create vertex with position, normal and color from individual components
            </summary>
            <param name="pX">The x position.</param>
            <param name="pY">The y position.</param>
            <param name="pZ">The z position.</param>
            <param name="nX">The x normal.</param>
            <param name="nY">The y normal.</param>
            <param name="nZ">The z normal.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex.#ctor(System.Single,System.Single,System.Single,SharpDX.Vector3)">
            <summary>
            Create vertex with position from individual components and normal and color
            </summary>
            <param name="pX">The x position.</param>
            <param name="pY">The y position.</param>
            <param name="pZ">The z position.</param>
            <param name="normal">The normal.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex.#ctor(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Create vertex with position, normal, color, uv coordinates
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex">
            <summary>
            Vertex input structure: Position, Normal, and texture
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(SharpDX.Vector3)">
            <summary>
            Create vertex with position and color (normal will be based on position)
            </summary>
            <param name="position">Vertex position</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create vertex with position from individual components (normal will be calculated)
            </summary>
            <param name="pX">X</param>
            <param name="pY">Y</param>
            <param name="pZ">Z</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create vertex with position, normal and color from individual components
            </summary>
            <param name="pX">The x position.</param>
            <param name="pY">The y position.</param>
            <param name="pZ">The z position.</param>
            <param name="nX">The x normal.</param>
            <param name="nY">The y normal.</param>
            <param name="nZ">The z normal.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(System.Single,System.Single,System.Single,SharpDX.Vector3)">
            <summary>
            Create vertex with position from individual components and normal and color
            </summary>
            <param name="pX">The x position.</param>
            <param name="pY">The y position.</param>
            <param name="pZ">The z position.</param>
            <param name="normal">The normal.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Create vertex with position, normal and color
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Create vertex with position, normal, color, uv coordinates
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <param name="uv">The uv.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionTexturedVertex">
            <summary>
            Vertex input structure: Position and texture
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionTexturedVertex.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionTexturedVertex" /> struct.
            </summary>
            <param name="pX">The p x.</param>
            <param name="pY">The p y.</param>
            <param name="pZ">The p z.</param>
            <param name="u">The u.</param>
            <param name="v">The v.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionTexturedVertex.#ctor(SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionTexturedVertex" /> struct.
            </summary>
            <param name="position">The position.</param>
            <param name="uv">The texture coordinates.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionVertex">
            <summary>
            Vertex input structure: Position and texture
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionVertex.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionVertex" /> struct.
            </summary>
            <param name="pX">The p x.</param>
            <param name="pY">The p y.</param>
            <param name="pZ">The p z.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionVertex.#ctor(SharpDX.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionVertex" /> struct.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.TextRenderer">
            <summary>
            A renderer for text in the display
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.TextHeight">
            <summary>
            Gets the height of the text.
            </summary>
            <value>
            The height of the text.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.#ctor(SharpDX.Color4,SharpDX.Point)">
            <summary>
            Initializes a new instance of <see cref="T:Ace.Visualization.Display.Primitives.Meshes.TextRenderer" /> class.
            </summary>
            <param name="color">The color.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.#ctor(System.String,SharpDX.Color4,SharpDX.Point,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Ace.Visualization.Display.Primitives.Meshes.TextRenderer" /> class.
            </summary>
            <param name="font">The font.</param>
            <param name="color">The color.</param>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
            <param name="lineLength">Length of the line.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TextRenderer.Render(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Renders the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh">
            <summary>
            Represents a square with a texture loaded and displayed on the top surface.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh.#ctor(Ace.Visualization.DxTransform,System.Double,System.Double,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh"/> class.
            </summary>
            <param name="center">The center.</param>
            <param name="dx">The x size of the rectangle.</param>
            <param name="dy">The y size of the rectangle.</param>
            <param name="bmp">The bitmap used as a source for the texture.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,System.Drawing.Color)">
            <summary>
            Creates the mesh.
            </summary>
            <param name="device">The device associated with the mesh.</param>
            <param name="defaultColor">The default color for the mesh.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the mesh to the DirectX subsystem.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TexturedRectangleAceMesh.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh">
            <summary>
            Represents a rendering of a Wavefront OBJ file
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.IsColliding">
            <summary>
            Gets or sets a value indicating whether this instance is colliding.
            </summary>
            <value>
            <c>true</c> if this instance is colliding; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.CreateMaterials(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Creates the materials used in the mesh
            </summary>
            <param name="device">The the device handle.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.CreateGroups(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Creates the hierarchy of groupings.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,System.Drawing.Color)">
            <summary>
            Creates the mesh.
            </summary>
            <param name="device">The device associated with the mesh.</param>
            <param name="defaultColor">The default color for the mesh.</param>
            <exception cref="T:System.InvalidOperationException">Mesh already created</exception>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the mesh to the DirectX subsystem.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial">
            <summary>
            Represents a material object
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.DefaultRenderingMaterial">
            <summary>
            Gets the rendering material.
            </summary>
            <value>
            The rendering material.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.CollisionRenderingMaterial">
            <summary>
            Gets the rendering material used in a collision
            </summary>
            <value>
            The rendering material.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.Properties">
            <summary>
            Gets the material properties
            </summary>
            <value>
            The material properties
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.DiffuseTexture">
            <summary>
            Gets or sets the diffuse texture.
            </summary>
            <value>
            The diffuse texture.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData,Ace.Visualization.Resources.Wavefront.WavefrontMaterial)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.Create(Ace.Visualization.Display.Primitives.DxDevice,Ace.Visualization.Display.Primitives.Handles.DisplayResources)">
            <summary>
            Creates the material resources.
            </summary>
            <param name="device">The device.</param>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial.Cleanup">
            <summary>
            Releases resources for the material.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh">
            <summary>
            Represents a mesh for a Wavefront OBJ group
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.Group">
            <summary>
            Gets or sets the group.
            </summary>
            <value>
            The group.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData,Ace.Visualization.Resources.Wavefront.WavefrontGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="group">The group.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,Ace.Visualization.Display.Primitives.Handles.DisplayResources)">
            <summary>
            Creates the mesh for the grouping
            </summary>
            <param name="device">The device.</param>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.AddVerteces(Ace.Visualization.Resources.Wavefront.WavefrontFace,System.Collections.Generic.List{Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalVertex})">
            <summary>
            Adds normal vertexes to the vertex list
            </summary>
            <param name="face">The face.</param>
            <param name="list">The list.</param>
            <returns>
            The number of triangles added
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.AddVerteces(Ace.Visualization.Resources.Wavefront.WavefrontFace,System.Collections.Generic.List{Ace.Visualization.Display.Primitives.Meshes.CustomVertex.PositionNormalTexturedVertex})">
            <summary>
            Adds normal/texture vertexes to the vertex list
            </summary>
            <param name="face">The face.</param>
            <param name="list">The list.</param>
            <returns>
            The number of triangles added
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo,Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMaterial,System.Boolean)">
            <summary>
            Renders to the specified device context.
            </summary>
            <param name="context">The context.</param>
            <param name="groupMaterial">The group material.</param>
            <param name="isColliding">if set to <c>true</c> draw the mesh in a collision state.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.IntersectDistance(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns the intersection point of two vectors.
            </summary>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray dir.</param>
            <returns>The intersection distance to the mesh</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.WavefrontAceMesh.WavefrontGroupMesh.Cleanup">
            <summary>
            Releases resources for the material.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.AceMesh">
            <summary>
            A base class for rendering an arbitrary mesh. This base class and all derived classes are
            responsible for defining the vertices that are used for drawing.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.AceMesh.Device">
            <summary>
            Gets the context associated with the mesh.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.AceMesh.Color">
            <summary>
            Gets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.AceMesh.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.AceMesh.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.AceMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the mesh to the DirectX subsystem.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.AceMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,System.Drawing.Color)">
            <summary>
            Creates the mesh.
            </summary>
            <param name="device">The device associated with the mesh.</param>
            <param name="defaultColor">The default color for the mesh.</param>
            <exception cref="T:System.InvalidOperationException">Mesh already created</exception>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.ShapeOptions">
            <summary>
            An enumeration of options used when drawing objects in the 3D display.
            Not all options may be relevant for all shapes.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.ShapeOptions.None">
            <summary>
            No options to be specified
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.ShapeOptions.NoSides">
            <summary>
            Don't draw the sides of an object.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.ShapeOptions.NoTop">
            <summary>
            Don't draw the top of an object.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.ShapeOptions.NoBottom">
            <summary>
            Don't draw the bottom of an object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.ExtrusionAceMesh">
            <summary>
            Draws an extruded shape in the 3D display.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.ExtrusionAceMesh.#ctor(Ace.Visualization.DxVector[],Ace.Visualization.DxVector[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.ExtrusionAceMesh"/> class.
            </summary>
            <param name="bot">The bot.</param>
            <param name="top">The top.</param>
            <param name="creaseAngle">The crease angle.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.ExtrusionAceMesh.FillVertexBuffer">
            <summary>
            Fills the vertex buffer.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.ExtrusionAceMesh.VertexCount">
            <summary>
            Gets the vertex count.
            </summary>
            <value>
            The vertex count.
            </value>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.MeshHelper">
            <summary>
            Helper class for creating meshes
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddCylinder(Ace.Visualization.DxTransform,System.Single,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a cylinder to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddCone(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a cone to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddCone(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a code or a truncated cone to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreateCone(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create the meshes for a  code or a truncated cone.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddBox(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a box to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddSphere(Ace.Visualization.DxTransform,System.Single)">
            <summary>
            Creates a sphere
            </summary>
            <param name="baseLoc">The base loc.</param>
            <param name="radius">The radius.</param>
            <returns>The meshes representing the sphere</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreateArrow(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create shape for an axis arrow.
            </summary>		
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreateCurve(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a curved section.
            </summary>		
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddPyramid(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a pyramid to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.AddPyramid(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,Ace.Visualization.Display.Primitives.Meshes.ShapeOptions)">
            <summary>
            Add a pyramid to the specified shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreatePyramid(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a pyramid mesh.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreateExtrusion(Ace.Visualization.DxTransform,Ace.Visualization.DxVector[],Ace.Visualization.DxTransform,Ace.Visualization.DxVector[],System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates the extrusion primitives
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.MeshHelper.CreatePolygon(Ace.Visualization.DxTransform,Ace.Visualization.DxVector[],System.Boolean)">
            <summary>
            Create a polygonal surface.
            </summary>      
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.PolygonAceMesh">
            <summary>
            Draws a polygonal surface in the 3D display.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.PolygonAceMesh.#ctor(Ace.Visualization.DxVector[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Meshes.PolygonAceMesh"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="reverse">if set to <c>true</c> [reverse].</param>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.PolygonAceMesh.VertexCount">
            <summary>
            Gets the vertex count.
            </summary>
            <value>
            The vertex count.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.PolygonAceMesh.FillVertexBuffer">
            <summary>
            Fills the vertex buffer.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance">
            <summary>
            Appearance associated with a particular shape.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.CreateDefault(System.Drawing.Color)">
            <summary>
            Creates a default appearance of the specified color.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.CreateDefault(System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            Creates a default appearance of the specified color.
            </summary>
            <param name="color">The color of the material.</param>
            <param name="ambientFactor">The factor to apply to the ambient color.</param>
            <param name="hasTexture">if set to <c>true</c> a texture will be used.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.Wireframe">
            <summary>
            Gets or sets a flag indicating whether the object should be drawn as a wireframe.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.Transparency">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance"/> is transparent.
            </summary>
            <value><c>true</c> if transparent; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.Render(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Configures for drawing with the current appearance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.SimulationAppearance.PostRender(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Handles other configurations for drawing with the current appearance.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh">
            <summary>
            A base class used for drawing a surface specified by subclasses.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.VertexCount">
            <summary>
            Gets the vertex count.
            </summary>
            <value>
            The vertex count.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.IndexCount">
            <summary>
            Gets the index count.
            </summary>
            <value>
            The index count.
            </value>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.VertexBuffer">
            <summary>
            The vertex buffer
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.IndexBuffer">
            <summary>
            The index buffer
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.VertexBinding">
            <summary>
            The vertex binding
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.FillVertexBuffer">
            <summary>
            Fills the vertex buffer.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.CreateMesh(Ace.Visualization.Display.Primitives.DxDevice,System.Drawing.Color)">
            <summary>
            Creates the mesh.
            </summary>
            <param name="device">The device associated with the mesh.</param>
            <param name="defaultColor">The default color for the mesh.</param>
            <exception cref="T:System.InvalidOperationException">Mesh already created</exception>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the mesh to the DirectX subsystem.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Meshes.TriangleStripAceMesh.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.RecordTile">
            <summary>
            Represents a tile to change the scene graph
            </summary>
            <seealso cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RecordTile.#ctor(Ace.Visualization.Display.Primitives.DxDevice,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.RecordTile" /> class.
            </summary>
            <param name="device">The device.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RecordTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RecordTile.PerformSave">
            <summary>
            Performs the post save operation
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RecordTile.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Performs 3D rendering of this shape.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RecordTile.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.RulerTile">
            <summary>
            Represents a tile to hide/display the ruler
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.RulerTile.Ruler">
            <summary>
            Gets the ruler in the display
            </summary>
            <value>
            The ruler.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RulerTile.#ctor(Ace.Visualization.Display.Primitives.DxDevice,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.RulerTile" /> class.
            </summary>
            <param name="device">The device.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RulerTile.IsSelected(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <param name="context"></param>
            <returns></returns>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.RulerTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.OperationTile">
            <summary>
            Represent a control tile associated with an operation displayed in the 3d Display.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Operation">
            <summary>
            Gets the operation associated with the tile
            </summary>
            <value>
            The operation associated with the tile.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.#ctor(Ace.Visualization.Resources.Operations.Operation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.OperationTile" /> class.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.IsSelected(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <param name="context">The rendering context</param>
            <returns></returns>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Unselect">
            <summary>
            Unselects this tile.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Performs 3D rendering of this shape.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.Render(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Performs 3D rendering of this shape.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.HitText(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Int32,System.Int32)">
            <summary>
            Checks if the point is in the boundaries of the tile.
            </summary>
            <param name="context">The drawing context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>
            Was the point in the boundaries
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.OperationTile.SetAccent(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Boolean)">
            <summary>
            Sets the accent for the tile.
            </summary>
            <param name="context">The context.</param>
            <param name="isAccented">if set to <c>true</c> the tile is accented.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile">
            <summary>
            Represent a control tile displayed in the 3d Display that is associated with multiple viewports
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="image">The image resource.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.#ctor(System.String,System.Drawing.Bitmap[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="images">The image resource.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.#ctor(System.String,System.Drawing.Bitmap,System.Func{Ace.Visualization.Display.Primitives.DxRenderInfo,System.Boolean},System.Action{Ace.Visualization.Display.Primitives.Tiles.TileBase,Ace.Visualization.Display.Primitives.DxRenderInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="image">The image resource.</param>
            <param name="isSelected">The is selected.</param>
            <param name="select">The select.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.IsSelected(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.Clear">
            <summary>
            Clears the textures and drawing primitives
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.UpdateAccent(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Updates the accent based on the rendering context
            </summary>
            <param name="context">The rendering context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Performs 3D rendering of this shape.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.ActionTile.SetAccent(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Boolean)">
            <summary>
            Sets the accent for the tile.
            </summary>
            <param name="context">The context.</param>
            <param name="isAccented">if set to <c>true</c> the tile is accented.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.SceneGraphTile">
            <summary>
            Represents a tile to change the scene graph
            </summary>
            <seealso cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.SceneGraphTile.#ctor(Ace.Visualization.Display.Primitives.DxDevice,System.String,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.SceneGraphTile" /> class.
            </summary>
            <param name="device">The device.</param>
            <param name="text">The text.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.SceneGraphTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile">
            <summary>
            Represents a tile to align the camera
            </summary>
            <seealso cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile.#ctor(Ace.Visualization.Display.Primitives.DxDevice,System.String,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile" /> class.
            </summary>
            <param name="device">The device.</param>
            <param name="text">The text.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile.GetStartingLocation(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Windows.Forms.Form)">
            <summary>
            Calculates the starting location for the form, attempting to keep the
            form in the visible portion of the display
            </summary>
            <param name="context">The context.</param>
            <param name="form">The form.</param>
            <returns>
            The starting position of the form
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.CameraAlignmentTile.ViewChangeSelected(Ace.Visualization.Display.Primitives.ViewChangeForm.Selection)">
            <summary>
            Views the change selected.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.TileBase">
            <summary>
            Represent a control tile displayed in the 3d Display.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.Accent">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Visualization.Display.Primitives.Tiles.TileBase"/> should be accented.
            </summary>
            <value>
              <c>true</c> if accented; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.Position">
            <summary>
            Gets or sets the position of the tile, top left corner
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.Size">
            <summary>
            Gets the size of the tile
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.ActiveImageIndex">
            <summary>
            Gets or sets the index of the image that should be drawn.
            </summary>
            <value>
            The index of the active image.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.Tiles.TileBase.UpdateSelection">
            <summary>
            Gets or sets a value indicating whether the tiles of the selected object should be refreshed after the
            tile is selected
            </summary>
            <value>
            <c>true</c> if the selection should be updated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.TileBase" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="image">The image resource.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.#ctor(System.String,System.Drawing.Bitmap[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.TileBase" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="images">The image resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.#ctor(System.String,System.Drawing.Bitmap[],System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.TileBase" /> class.
            </summary>
            <param name="description">The description to associate with the tile.</param>
            <param name="images">The image resources.</param>
            <param name="selectionOverlay">The selection overlay image resource.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Finalize">
            <summary>
            Calls the Dispose(false) method to complete the implementation
            of the Dispose pattern.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Clear">
            <summary>
            Clears the textures and drawing primitives
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Initialize(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Initializes the drawing primitives for this object.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the drawing primitives for this object.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.OnInitialize(Ace.Visualization.Display.Primitives.DxDevice,System.Single,System.Single)">
            <summary>
            Initializes the drawing primitives for this object.
            </summary>
            <param name="device">The device.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the tile to the specific context
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Render(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Renders the tile to the screen
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.OnRender(Ace.Visualization.Display.Primitives.DxDevice,System.Single,System.Single,System.Boolean)">
            <summary>
            Performs 3D rendering of the tile to the specified device
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.IsSelected(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <param name="context">The rendering context</param>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.Unselect">
            <summary>
            Unselects this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.HitText(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Int32,System.Int32)">
            <summary>
            Checks if the point is in the boundaries of the tile.
            </summary>
            <param name="context">The drawing context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>
            Was the poit in the boundaries
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.HitText(System.Int32,System.Int32)">
            <summary>
            Checks if the point is in the boundaries of the tile.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>
            Was the poit in the boundaries
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.SetAccent(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Boolean)">
            <summary>
            Sets the accent for the tile.
            </summary>
            <param name="context">The context.</param>
            <param name="isAccented">if set to <c>true</c> the tile is accented.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.TileBase.SelectPoint(Ace.Visualization.DxVector)">
            <summary>
            Selects the point.
            </summary>
            <param name="coordinate">The coordinate.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.Tiles.MouseModeTile">
            <summary>
            Represents a tile to change the mouse mode 
            </summary>
            <seealso cref="T:Ace.Visualization.Display.Primitives.Tiles.ActionTile" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.MouseModeTile.#ctor(Ace.Visualization.Display.Primitives.DxDevice,System.String,System.Drawing.Bitmap,Ace.Visualization.Display.SimulationMouseMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.Tiles.MouseModeTile" /> class.
            </summary>
            <param name="device">The device.</param>
            <param name="text">The text.</param>
            <param name="image">The image.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.MouseModeTile.IsSelected(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <param name="context"></param>
            <returns></returns>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.Tiles.MouseModeTile.Select(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Selects this tile.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.DxTileManager">
            <summary>
            Utility class managing the tiles displayed in the 3D display
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxTileManager.Tiles">
            <summary>
            Gets all tiles in the display.
            </summary>
            <value>
            The tiles.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxTileManager.ContextTiles">
            <summary>
            Gets the tiles that are relative to the DeviceContext
            </summary>
            <value>
            The tiles.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxTileManager.ScreenTiles">
            <summary>
            Gets the tiles that are relative to the screen
            </summary>
            <value>
            The tiles.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxTileManager.AllowRecordingTile">
            <summary>
            Gets or sets a value indicating whether we show the record tile.
            </summary>
            <value>
              <c>true</c> if the record tile is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxTileManager"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.LayoutTiles">
            <summary>
            Layouts the control tiles for each rendering context
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.ArrangeGeneralTiles">
            <summary>
            Arranges the general tiles.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.ArrangeSelectedObjectTiles">
            <summary>
            Arranges the selected object tiles.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.Render(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.UpdateSelectedObject(Ace.Visualization.Resources.Abstract3DObject,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Updates the selected object tiles.
            </summary>
            <param name="selectedObject">The selected object.</param>
            <param name="element">The element that was selected.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.UpdateSelectedObject">
            <summary>
            Updates the selected object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxTileManager"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxTileManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ViewChangeForm">
            <summary>
            Form allowing user to change the current view
            </summary>
            <seealso cref="T:System.Windows.Forms.Form" />
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ViewChangeForm.Selection">
            <summary>
            Idenmtifies the possible selections of the control
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.ViewChangeForm.Selected">
            <summary>
            Invokled when the selection changes
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.pictureBox_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseEnter event of the pictureBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.pictureBox_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeave event of the pictureBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.pictureBox_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the pictureBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.ViewChangeForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the ViewChangeForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.panelBackground_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseClick event of the panelBackground control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.panelBackground_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Handles the PreviewKeyDown event of the panelBackground control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.ViewChangeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ViewChangeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.DxDevice">
            <summary>
            Container for the DirectX handles
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.IsHardwareCompatible">
            <summary>
            Returns if the PC hardware is able to display the 3D
            </summary>
            <value>returns true if the Hardware is compatible for this plugin, false if not.</value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.Owner">
            <summary>
            Gets the owner of the device
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.IsDispose">
            <summary>
            Gets a value indicating whether this instance is dispose.
            </summary>
            <value>
            <c>true</c> if this instance is dispose; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>
            The manager.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.DeviceLost">
            <summary>
            Gets or sets a value indicating whether the device has been lost.
            </summary>
            <value>
              <c>true</c> if the device has been lost; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.WasReset">
            <summary>
            Gets or sets a value indicating if the 3D display was reset.
            </summary>
            <value>
              <c>true</c> if the device was reset; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.IsLive">
            <summary>
            Gets a value indicating whether the display is in live mode.
            </summary>
            <value>
              <c>true</c> if the display is in live mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.SceneCenter">
            <summary>
            Respresents the center of the drawn scene
            </summary>
            <value>
            The scene center.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.ViewConfiguration">
            <summary>
            Gets the view configuration.
            </summary>
            <value>
            The view configuration.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.TileManager">
            <summary>
            Gets the tile manager.
            </summary>
            <value>
            The tile manager.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.RenderContexts">
            <summary>
            Gets the render contexts.
            </summary>
            <value>
            The render contexts.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxDevice.PointCapture">
            <summary>
            The point capture information
            </summary>
            <value>
            The point capture.
            </value>
        </member>
        <member name="E:Ace.Visualization.Display.Primitives.DxDevice.FrameRendered">
            <summary>
            Event thrown when an individual frame is rendered.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.DxDevice.DefaultPosition">
            <summary>
            Defines the default location used when positioning the camera by the tiles
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.DxDevice.VisibilityGroup">
            <summary>
            Defines the visibility group for the scene
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.DxDevice.ActiveFrame">
            <summary>
            Defines the active frame
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.DxDevice.RecordingManager">
            <summary>
            Defines the recording manager
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxDevice" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Ace.Visualization.Display.Primitives.DxDevice"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.ChangeViewConfiguration(Ace.Visualization.Display.ViewConfiguration)">
            <summary>
            Changes the view configuration.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Create">
            <summary>
            Creates this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateVertexShaders">
            <summary>
            Creates the vertex shaders.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreatePixelShaders">
            <summary>
            Creates the pixel shaders.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateBuffers">
            <summary>
            Creates the buffers.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateDepthStencils">
            <summary>
            Creates the depth stencils.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateRasterStates">
            <summary>
            Creates the raster states.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateBlendStates">
            <summary>
            Creates the blend states.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.CreateSamplerStates">
            <summary>
            Creates the sampler states.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Render(System.Collections.Generic.List{Ace.Visualization.Resources.Renderers.VisualResourceRenderer},Ace.Visualization.Recorder.VisibilityGroupCollection,Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Renders the frame.
            </summary>
            <param name="renderedResources">The rendered resources.</param>
            <param name="visibilityCollection">The visibility collection.</param>
            <param name="activeFrame">The active frame.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.OnFrameRendered(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Called when each individual frame is rendered.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.RenderElements(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Collections.Generic.List{Ace.Visualization.Resources.Renderers.VisualResourceRenderer},Ace.Visualization.Recorder.VisibilityGroupCollection,Ace.Visualization.Resources.DisplayElement[])">
            <summary>
            Renders the elements in the listing
            </summary>
            <param name="context">The context.</param>
            <param name="renderedResources">The rendered resources.</param>
            <param name="visibilityCollection">The visibility collection.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.RenderElements2D(System.Collections.Generic.List{Ace.Visualization.Resources.Renderers.VisualResourceRenderer},Ace.Visualization.Recorder.VisibilityGroupCollection,Ace.Visualization.Resources.DisplayElement[])">
            <summary>
            Renders the elements in the listing
            </summary>
            <param name="renderedResources">The rendered resources.</param>
            <param name="visibilityCollection">The visibility collection.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Recover">
            <summary>
            Recovers from a Lost Device
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.Clear(System.Drawing.Color)">
            <summary>
            Clears the display with the specified color.
            </summary>
            <param name="viewportBackColor">The viewport background color.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetRasterizerState(System.String)">
            <summary>
            Sets the state of the rasterizer.
            </summary>
            <param name="keyName">Name of the state.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetBlendState(System.String)">
            <summary>
            Sets the active blending mode.
            </summary>
            <param name="keyName">Name of the key.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetSamplerState(System.String)">
            <summary>
            Sets the active sampler state
            </summary>
            <param name="keyName">Name of the key.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetDepthStencilState(System.String)">
            <summary>
            Sets the active depth stencil state
            </summary>
            <param name="keyName">Name of the key.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetFrameProperties(SharpDX.Matrix,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Sets the frame properties.
            </summary>
            <param name="worldMatrix">The world matrix.</param>
            <param name="lightDirection">The light direction.</param>
            <param name="cameraPosition">The camera position.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetMaterialProperties(Ace.Visualization.Display.Primitives.ConstantBuffers.PerMaterial)">
            <summary>
            Sets the material properties.
            </summary>
            <param name="materialProperties">The material properties.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetObjectProperties(Ace.Visualization.Display.Primitives.ConstantBuffers.PerObject)">
            <summary>
            Sets the object properties.
            </summary>
            <param name="objectProperties">The object properties.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.SetSpriteProperties(Ace.Visualization.Display.Primitives.ConstantBuffers.PerSprite)">
            <summary>
            Sets the material properties.
            </summary>
            <param name="spriteProperties">The sprite properties.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.GetContext(System.Int32,System.Int32)">
            <summary>
            Gets the context associated with the specified mouse positions
            </summary>
            <param name="mouseX">The mouse x coordinate.</param>
            <param name="mouseY">The mouse y coordinate.</param>
            <returns>The drawing context or null if no context is available</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.GetDefaultPosition">
            <summary>
            Gets the default position.
            </summary>
            <returns>The default position for camera alignment</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.UpdateSelectedObject(Ace.Visualization.Resources.Abstract3DObject,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Updates the selected object.
            </summary>
            <param name="item">The item.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.GetVisibilityGroup">
            <summary>
            Gets the visibility group collection
            </summary>
            <returns>The collection</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.GetActiveFrame">
            <summary>
            Gets the active frame being displayed
            </summary>
            <returns>The frame</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxDevice.GetRecordingManager">
            <summary>
            Gets the recording manager.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.DxRenderInfo">
            <summary>
            Rendering class that represents an individual region being 
            rendered into. 
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Create a rendering information object for the given device.
            </summary>
            <param name="device">The DirectX device associated with the display.</param>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.Device">
            <summary>
            Gets the device being rendered.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.MouseMode">
            <summary>
            Gets or sets the mouse mode associated with the context
            </summary>
            <value>
            The mouse mode.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.Push(Ace.Visualization.DxTransform)">
            <summary>
            Pushes a transform onto the location stack.
            </summary>
            <param name="trans"></param>		
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.Pop">
            <summary>
            Pops a transform off the location stack.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.SetScale(System.Single)">
            <summary>
            Sets the scale factor applied to drawn objects.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            Sets the scale factor applied to drawn objects.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.ViewMatrix">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.ProjectionMatrix">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.ViewTransform">
            <summary>
            Sets the view transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.Viewport">
            <summary>
            Gets or sets the viewport for the camera
            </summary>
            <value>
            The viewport.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.ZoomLevel">
            <summary>
            Gets or sets the zoom level.
            </summary>
            <value>
            The zoom level.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.MaxZoomLevel">
            <summary>
            Gets the maximum zoom level.
            </summary>
            <value>
            The maximum zoom level.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.InterpolationActive">
            <summary>
            Gets a flag indicating if the interpolation is active
            </summary>
            <value>
            The interpolation active.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.InterpolationGoal">
            <summary>
            Gets the interpolation goal.
            </summary>
            <value>
            The interpolation goal.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.DrawTransparent">
            <summary>
            Gets or sets a value indicating whether we are rendering transparent nodes or non-transparent nodes.
            </summary>
            <value><c>true</c> if we draw only transparent nodes; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Visualization.Display.Primitives.DxRenderInfo.Transform">
            <summary>
            Gets or sets the current world transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.ScreenToViewport(System.Int32,System.Int32)">
            <summary>
            Converts a screen coordinate to a viewport coordinate.
            </summary>
            <param name="x">The x screen coordinate.</param>
            <param name="y">The y screen coordinate.</param>
            <returns>The viewport relative coordinate</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.ScreenToWorld(System.Int32,System.Int32)">
            <summary>
            Converts a screen coordinate to a world coordinate
            </summary>
            <param name="x">The x screen coordinate.</param>
            <param name="y">The y screen coordinate.</param>
            <returns>The world relative coordinate</returns>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.ZoomToDimension(System.Boolean,System.Single)">
            <summary>
            Set the zoom based on a required horizontal or vertical dimension.
            </summary>
            <param name="horizontal">if set to <c>true</c> set based on the horizontal dimension.</param>
            <param name="dimension">The dimension to set.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.SetViewport(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the viewport for the rendering context
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.Render">
            <summary>
            Initialize the rendering for the viewport
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.MoveViewTransformation(Ace.Visualization.DxTransform)">
            <summary>
            Moves the viewport to the specified view transformation
            </summary>
            <param name="trans">The destination position</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.InterpolateViewTransform(Ace.Visualization.DxTransform)">
            <summary>
            Interpolates the view between the current position and a desired end position
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.InterpolateViewTransform(Ace.Visualization.Display.CameraAlignment,Ace.Visualization.DxVector)">
            <summary>
            Interpolates the view transform.
            </summary>
            <param name="alignment">The alignment.</param>
            <param name="center">The center.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.ServiceInterpolation">
            <summary>
            Services the interpolation of the camera
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.GetPickParameters(System.Int32,System.Int32,Ace.Visualization.DxVector@,Ace.Visualization.DxVector@)">
            <summary>
            Converts the XY viewport click into a pick origin and vector 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="pickRayOrigin">The pick ray origin vector.</param>
            <param name="pickRayDir">The pick ray direction vector.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.DxRenderInfo.SetTransformPosition(SharpDX.Matrix)">
            <summary>
            Sets the transform position on the graphics card
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="T:Ace.Visualization.Display.Primitives.ScenePropertiesForm">
            <summary>
            Form for changing the visibility of items in the display
            </summary>
            <seealso cref="T:System.Windows.Forms.Form" />
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ScenePropertiesForm.#ctor(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.Primitives.ScenePropertiesForm" /> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="F:Ace.Visualization.Display.Primitives.ScenePropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ScenePropertiesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.Primitives.ScenePropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.DisplaySettings">
            <summary>
            Represents display settings for the 3D view
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.DisplaySettings.ViewConfiguration">
            <summary>
            Gets the view configuration.
            </summary>
            <value>
            The view configuration.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.DisplaySettings.ViewTransforms">
            <summary>
            Gets the view transform for each context
            </summary>
            <value>
            The view transforms.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.DisplaySettings.ZoomLevels">
            <summary>
            Gets the zoom levels.
            </summary>
            <value>
            The zoom levels.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.DisplaySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.DisplaySettings"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.DisplaySettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Visualization.Display.DisplaySettings.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Visualization.Display.DisplaySettings.#ctor(Ace.Visualization.Display.ViewConfiguration,Ace.Visualization.DxTransform[],System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.DisplaySettings"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="viewTransforms">The view transforms.</param>
            <param name="zoomLevels">The zoom levels.</param>
        </member>
        <member name="T:Ace.Visualization.Display.ReplayFrameTracker">
            <summary>
            Class that forces the replay of frames from a recording manager. 
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.#ctor(Ace.Visualization.Recorder.RecordingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.ReplayFrameTracker"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.RecordingManager_FramesModified(System.Object,Ace.Visualization.Recorder.FrameModifiedEventArgs)">
            <summary>
            Handles the FramesModified event of the RecordingManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Visualization.Recorder.FrameModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.Start">
            <summary>
            Starts the background thread processing.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.Stop">
            <summary>
            Stops the background thread from processing.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.End">
            <summary>
            Move the display to the end
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.ReplayFrameTracker.BackgroundProcess">
            <summary>
            Performs background process to simulate incrementing of frames
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.ViewConfiguration">
            <summary>
            Describes the possible configurations of the views
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.ViewConfiguration.Single">
            <summary>
            A single viewport in the client display
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.ViewConfiguration.SideBySide">
            <summary>
            Two viewports docked side by side
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.ViewConfiguration.TopAndBotton">
            <summary>
            Two viewports docked top and button
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.ViewConfiguration.TwoByTwo">
            <summary>
            Four viewports docked in a square
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.SimulationMouseMode">
            <summary>
            Modes of mouse behavior in the 3D visualization control
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.Translate">
            <summary>
            Scene translation
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.Rotate">
            <summary>
            Rotation of the camera
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.Zoom">
            <summary>
            Zoom of the camera
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.Selection">
            <summary>
            Selection of objects in the scene
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.Drag">
            <summary>
            Drag an object in the scene
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.PointSelection">
            <summary>
            Selects a point in the scene
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.SimulationMouseMode.None">
            <summary>
            No mode selected
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.CameraAlignment">
            <summary>
            The camera alignment orientations
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.None">
            <summary>
            Unused / None
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Front">
            <summary>
            facing the front of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Back">
            <summary>
            facing the back of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Top">
            <summary>
            facing the top of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Bottom">
            <summary>
            facing the bottom of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Left">
            <summary>
            facing the left of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Right">
            <summary>
            facing the right of a position
            </summary>
        </member>
        <member name="F:Ace.Visualization.Display.CameraAlignment.Isometric">
            <summary>
            An "isometric" view of a position
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.InputManager">
            <summary>
            Utility class managing the interaction with the camera for the 3D display
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.InputManager.TRACKMOUSEEVENT">
            <summary>
            Structure for tracking mouse event - Resetting hover event
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.TrackMouseEvent(Ace.Visualization.Display.InputManager.TRACKMOUSEEVENT@)">
            <summary>
            Tracks the mouse event.
            </summary>
            <param name="lpEventTrack">The lp event track.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Display.InputManager.ActiveFrame">
            <summary>
            Method to get the active frame.
            </summary>
            <value>
            The active frame.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.InputManager.RecordingManager">
            <summary>
            Method to get the recording manager.
            </summary>
            <value>
            The recording manager.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.InputManager.SelectionChanged">
            <summary>
            Method used to report when the selection changes.
            </summary>
            <value>
            The selection changed method.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.#ctor(System.Windows.Forms.Control,System.Windows.Forms.ToolTip,System.Windows.Forms.ContextMenuStrip,Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.InputManager" /> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="contextMenuStrip">The context menu strip.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseWheel event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDoubleClick event of the Parent control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseHover(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseHover event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeave event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.Parent_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.EndMouseDrag(System.Boolean)">
            <summary>
            Ends the mouse drag operation
            </summary>
            <param name="cancel">if set to <c>true</c> the drag should be canceled.</param>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.UpdateMouseDisplay">
            <summary>
            Updates the availability of the buttons and controls based on the current selection mode.
            </summary>		
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.MouseMovedFromHoverPosition(System.Drawing.Point)">
            <summary>
            Returns the distance the mouse has moved from the last hover position.
            </summary>
            <returns>The distance the mouse has moved</returns>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.LoadCursorFromFile(System.String)">
            <summary>
            Loads a cursor from a file.
            </summary>
            <param name="path">The path.</param>
            <returns>Handle to the cursor</returns>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.LoadCustomCursor(System.String)">
            <summary>
            Loads a cursor from a file and returns a cursor object
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <returns>The created cursor</returns>
            <exception cref="T:System.ComponentModel.Win32Exception"></exception>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.GetClosestObject(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Int32,System.Int32,System.Single@,Ace.Visualization.DxVector@,Ace.Visualization.DxVector@)">
            <summary>
            Gets the closest object.
            </summary>
            <param name="context">The context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="distance">The distance to the selected object.</param>
            <param name="pickRayOriginVector">The pick ray origin vector used in the selection process.</param>
            <param name="pickRayDirectionVector">The pick ray direction vector used in the selection process.</param>
            <returns>
            The closest object -or- null if no object is closest
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.GetClosestEditPoint(Ace.Visualization.Display.Primitives.DxRenderInfo,System.Int32,System.Int32,System.Single@,Ace.Visualization.DxVector@,Ace.Visualization.DxVector@)">
            <summary>
            Gets the closest edit point.
            </summary>
            <param name="context">The context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="distance">The distance to the selected object.</param>
            <param name="pickRayOriginVector">The pick ray origin vector used in the selection process.</param>
            <param name="pickRayDirectionVector">The pick ray direction vector used in the selection process.</param>
            <returns>
            The closest object -or- null if no object is closest
            </returns>
        </member>
        <member name="M:Ace.Visualization.Display.InputManager.UpdateSelectedItem(Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Updates the selected item based on the element that is selected
            </summary>
            <param name="element">The element.</param>
            <returns>The currently selected object</returns>
        </member>
        <member name="T:Ace.Visualization.Display.FrameTrackerDisplay">
            <summary>
            Graphical interface for the frame tracker controls of a 3D display
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="P:Ace.Visualization.Display.FrameTrackerDisplay.FrameTracker">
            <summary>
            Gets or sets the frame tracker associated with the display.
            </summary>
            <value>
            The frame tracker.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.FrameTrackerDisplay"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.FrameTrackerDisplay_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the FrameTrackerDisplay control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.InitializeTrackerLinks">
            <summary>
            Initializes the tracker links.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.Tracker_DisplayStateChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the DisplayStateChanged event of the Tracker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.UpdateTrackerDisplay">
            <summary>
            Updates the tracker display.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.UpdateTrackBar">
            <summary>
            Updates the track bar.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.UpdateFrameIndex">
            <summary>
            Updates the index of the frame.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.buttonPlayPause_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonPlayPause control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.buttonBeginning_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonBeginning control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.buttonEnd_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonEnd control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.trackBar_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event of the trackBar control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.trackBar_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the trackBar control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.trackBar_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the trackBar control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Visualization.Display.FrameTrackerDisplay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTrackerDisplay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.SelectedObjectEventArgs">
            <summary>
            Class describing when the selected object changes in the 3D virtual display
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Ace.Visualization.Display.SelectedObjectEventArgs.SelectedObject">
            <summary>
            Gets or sets the selected object.
            </summary>
            <value>
            The selected object.
            </value>
        </member>
        <member name="M:Ace.Visualization.Display.SelectedObjectEventArgs.#ctor(Ace.Visualization.Resources.Abstract3DObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.SelectedObjectEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Ace.Visualization.Display.VirtualDisplay">
            <summary>
            Represents a virtual display of a 3D scene
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="P:Ace.Visualization.Display.VirtualDisplay.Recorder">
            <summary>
            Gets or sets the RecordingManager associated with the display
            </summary>
            <value>
            The recorder.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.VirtualDisplay.SelectedItem">
            <summary>
            Gets the currently selected item.
            </summary>
            <value>
            The selected item.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.VirtualDisplay.FrameTracker">
            <summary>
            Gets the frame tracker for the display
            </summary>
            <value>
            The frame tracker.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.VirtualDisplay.Settings">
            <summary>
            Gets or sets the display settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.VirtualDisplay.AllowRecording">
            <summary>
            Gets or sets a value indicating whether saving of the recording is allowed.
            </summary>
            <value>
              <c>true</c> if saving is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ace.Visualization.Display.VirtualDisplay.FrameRendered">
            <summary>
            Occurs when 
            </summary>
            <value>
              <c>true</c> if saving is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ace.Visualization.Display.VirtualDisplay.SelectionChanged">
            <summary>
            Occurs when the selected object changes.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.VirtualDisplay"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.VirtualDisplay_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the VirtualDisplay control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.Application_Idle(System.Object,System.EventArgs)">
            <summary>
            Handles the Idle event of the Application control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.RecordingManager_ResourcesModified(System.Object,Ace.Visualization.Recorder.ResourceModifiedEventArgs)">
            <summary>
            Handles the ResourcesModified event of the RecordingManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Visualization.Recorder.ResourceModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.FrameTracker_DisplayStateChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the DisplayStateChanged event of the FrameTracker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.GetDefaultPosition">
            <summary>
            Gets the default position for the scene. If an element is selected, it should
            be at the center of the element. Otherwise, the scene center
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Performs custom drawing of the 3-D simulation control.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.OnResize(System.EventArgs)">
            <summary>
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.OnSelectionChanged(Ace.Visualization.Resources.Abstract3DObject,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Called when the selected object changes.
            </summary>
            <param name="item">The selected item.</param>
            <param name="element">The selected element.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.SessionStateChanged(System.Object,Microsoft.Win32.SessionSwitchEventArgs)">
            <summary>
            Handles the Windows session state changed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Microsoft.Win32.SessionSwitchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ManageResources">
            <summary>
            Manages any resources that need to be created or deleted.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ReclaimResources">
            <summary>
            Reclaims any created resources so they can be recreated.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ApplyDisplaySettings">
            <summary>
            Applies the display settings.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.UpdateDisplaySettings">
            <summary>
            Updates the display settings.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ZoomToDimension(System.Boolean,System.Single)">
            <summary>
            Zooms all views to the field of view size in the horizontal or vertical axis.
            </summary>
            <param name="horizontal">if set to <c>true</c> scale the horizontal view.</param>
            <param name="fieldOfView">The field of view.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ChangeSelection(Ace.Visualization.Resources.Abstract3DObject)">
            <summary>
            Changes the selection.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.ChangeOperations(Ace.Visualization.Resources.Abstract3DObject,System.Boolean,System.Type[])">
            <summary>
            Changes the operations.
            </summary>
            <param name="ace3dObject">The ace3d object.</param>
            <param name="enable">if set to <c>true</c> the operations are enabled.</param>
            <param name="operationTypes">The operation types.</param>
            <returns>Was the state of the object changed</returns>
        </member>
        <member name="F:Ace.Visualization.Display.VirtualDisplay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Visualization.Display.VirtualDisplay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Display.FrameTracker">
            <summary>
            Class that monitors the current frame for a frame collection.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.Manager">
            <summary>
            Gets the recording manager associated with the tracker
            </summary>
            <value>
            The recording manager.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.IsPaused">
            <summary>
            Gets a value indicating whether the display is paused.
            </summary>
            <value>
              <c>true</c> if the display is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.IsLive">
            <summary>
            Gets a value indicating whether the display is in live mode.
            </summary>
            <value>
              <c>true</c> if the display is in live mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.LastKnownTotalFrames">
            <summary>
            Gets the last known total number of frames in the display
            </summary>
            <value>
            The last known total frames.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.FrameIndex">
            <summary>
            Gets the index of the currently active frame.
            </summary>
            <value>
            The index of the frame.
            </value>
        </member>
        <member name="P:Ace.Visualization.Display.FrameTracker.ActiveFrame">
            <summary>
            Gets the active frame that should be displayed.
            </summary>
            <value>
            The active frame.
            </value>
        </member>
        <member name="E:Ace.Visualization.Display.FrameTracker.DisplayStateChanged">
            <summary>
            Occurs when a frame .
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.#ctor(Ace.Visualization.Recorder.RecordingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Display.FrameTracker"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.RecordingManager_FramesModified(System.Object,Ace.Visualization.Recorder.FrameModifiedEventArgs)">
            <summary>
            Handles the FramesModified event of the RecordingManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Visualization.Recorder.FrameModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.OnDisplayStateChanged">
            <summary>
            Called when the display state has changed
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Pause">
            <summary>
            Pauses the display
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Resume">
            <summary>
            Resumes the display
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Live">
            <summary>
            Puts the display in live mode (jumping to the most recent frame)
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.End">
            <summary>
            Move the display to the end
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Beginning">
            <summary>
            Reqind to the oldest / beginning of the frames
            </summary>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.JumpTo(System.Int32)">
            <summary>
            Jumps the display to the specified frame
            </summary>
            <param name="frameIndex">Index of the frame.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Display.FrameTracker.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.CollisionConfiguration">
            <summary>
            Represent a configuration for a single collision check
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfiguration.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.Visualization.Recorder.CollisionConfiguration"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfiguration.FirstSource">
            <summary>
            Gets the first source involved in the collision.
            </summary>
            <value>
            The first source.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfiguration.SecondSource">
            <summary>
            Gets the second source involved in the collision.
            </summary>
            <value>
            The second source.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfiguration.AverageExecutionTime">
            <summary>
            Gets the average execution time for the samples
            </summary>
            <value>
            The average execution time.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfiguration.#ctor(Ace.Visualization.Resources.CollisionSource,Ace.Visualization.Resources.CollisionSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.CollisionConfiguration"/> class.
            </summary>
            <param name="source1">The first source.</param>
            <param name="source2">The second source.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfiguration.RecordExecutionTime(System.Int64)">
            <summary>
            Records the execution time.
            </summary>
            <param name="elapsedMilliseconds">The elapsed milliseconds.</param>
        </member>
        <member name="T:Ace.Visualization.Recorder.CollisionConfigurationCollection">
            <summary>
            Represents a collection of collision configuration objects
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfigurationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Ace.Visualization.Recorder.CollisionConfiguration"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Recorder.CollisionConfiguration"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfigurationCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.CollisionConfigurationCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Add(Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Contains(Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.CopyTo(Ace.Visualization.Recorder.CollisionConfiguration[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.IndexOf(Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Insert(System.Int32,Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Remove(Ace.Visualization.Recorder.CollisionConfiguration)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.Remove(Ace.Visualization.Resources.Abstract3DObject)">
            <summary>
            Removes all collision configurations that reference the specified renderable object.
            </summary>
            <param name="renderableObject">The renderable object.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.ToArray">
            <summary>
            To the array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.CollisionConfigurationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Ace.Visualization.Recorder.IDeseralizationStream">
            <summary>
            Represents an interface for deserializing data
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.IDeseralizationStream.Offset">
            <summary>
            Sets the current offset in the serialization stream
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.PeekSectionStart(System.String)">
            <summary>
            Peeks at the start of the section in the serialized file and determine if the section is defined
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadSectionStart(System.String)">
            <summary>
            Reads the start of the section in the serialized file
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadSectionEnd">
            <summary>
            Reads the ending fo the currently open section in the grouping
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadLong">
            <summary>
            Reads the data from the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadInt(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadFloat(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadByte(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadByteArray(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadBool(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadString(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadPointf(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadVector3(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadDxTransform(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadTransparencyMode(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.IDeseralizationStream.ReadColor(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Recorder.BinarySerializer">
            <summary>
            Represents an interface for serializing data
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.BinarySerializer" /> class.
            </summary>
            <param name="read">if set to <c>true</c> we are reading from the file.</param>
            <param name="textFile">The text file.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.WriteString(System.String)">
            <summary>
            Writes the string.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Ace.Visualization.Recorder.BinarySerializer.Offset">
            <summary>
            Gets or sets the current offset in the serialization stream
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.WriteSectionStart(System.String)">
            <summary>
            Starts a section in the serialized file
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.WriteSectionEnd">
            <summary>
            Ends the currently open section in the grouping
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.Int64)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Int32)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Single)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Byte)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Byte[])">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Drawing.PointF)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,Ace.Visualization.DxVector)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,Ace.Visualization.DxTransform)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Boolean)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property"></param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.String)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property"></param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,Ace.Visualization.Resources.Resource.TransparencyMode)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.Write(System.String,System.Drawing.Color)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.PeekString">
            <summary>
            Peeks at the next string in the section
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadString">
            <summary>
            Reads the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.PeekSectionStart(System.String)">
            <summary>
            Peeks at the start of the section in the serialized file and determine if the section is defined
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadSectionStart(System.String)">
            <summary>
            Reads the start of the section in the serialized file
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadSectionEnd">
            <summary>
            Reads the ending fo the currently open section in the grouping
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadProperty(System.String)">
            <summary>
            Reads the property from the file
            </summary>
            <param name="propertyName">Name of the property.</param>
            <exception cref="T:System.InvalidOperationException">Property Not Found</exception>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadLong">
            <summary>
            Reads the data from the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadInt(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadFloat(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadByte(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadByteArray(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadBool(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadString(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadPointf(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadVector3(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadDxTransform(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadTransparencyMode(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.BinarySerializer.ReadColor(System.String)">
            <summary>
            Reads the data from the stream
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Recorder.ISeralizationStream">
            <summary>
            Represents an interface for serializing data
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.ISeralizationStream.Offset">
            <summary>
            Gets the current offset in the serialization stream
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.WriteSectionStart(System.String)">
            <summary>
            Starts a section in the serialized file
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.WriteSectionEnd">
            <summary>
            Ends the currently open section in the grouping
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.Int64)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Int32)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Single)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Byte)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Byte[])">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Boolean)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.String)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Drawing.PointF)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,Ace.Visualization.DxVector)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,Ace.Visualization.DxTransform)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,Ace.Visualization.Resources.Resource.TransparencyMode)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ISeralizationStream.Write(System.String,System.Drawing.Color)">
            <summary>
            Writes the data to the stream.
            </summary>
            <param name="property">The property.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Ace.Visualization.Recorder.Recorder">
            <summary>
            Class that handles the saving /serialization of the recording manager to a file
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.Recorder.FrameIndexEntry">
            <summary>
            The entry in the ZIP file for indexes for the frames
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.Recorder.FramesEntry">
            <summary>
            The entry in the ZIP file for frames
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.Recorder.ResourcesEntry">
            <summary>
            The entry in the ZIP file for resources
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.Recorder.VisibilityGroupsEntry">
            <summary>
            The entry in the ZIP file for visibility groups
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.Recorder.State">
            <summary>
            Gets a value indicating whether this instance is recording.
            </summary>
            <value>
            <c>true</c> if this instance is recording; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.#ctor(Ace.Visualization.Recorder.RecordingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.Recorder"/> class.
            </summary>
            <param name="manager">The manager owning the recorder.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Start">
            <summary>
            Starts recording the scene
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Pause">
            <summary>
            Pauses the recording state
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Stop">
            <summary>
            Stop any recording being performed
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Stop(Ace.Visualization.Recorder.RecorderState)">
            <summary>
            Stop any recording being performed
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Clear">
            <summary>
            Clears any files cached as part of the recording process
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Save(System.String)">
            <summary>
            Clears any files cached as part of the recording process
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.RecordFrame(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Records the frame.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.Recorder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.RecorderState">
            <summary>
            Describes the possible states of the recorder
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.RecorderState.NotRecording">
            <summary>
            The recorder is not recording
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.RecorderState.Recording">
            <summary>
            The recorder is recording frames
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.RecorderState.Saving">
            <summary>
            The recorder is saving a recording
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.RecorderState.Paused">
            <summary>
            The recorder is paused
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisualFrameVirtualCollection">
            <summary>
            A collection of VisualFrame objects that are contained in disk files
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.ResourceKeys">
            <summary>
            Gets the list of all resource keys referenced in the collection.
            </summary>
            <value>
            The resource keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.VisibilityKeys">
            <summary>
            Gets the list of all visibility keys referenced in the collection.
            </summary>
            <value>
            The visibility keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ace.Visualization.Recorder.VisualFrame"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Recorder.VisualFrame"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.ElapsedTime">
            <summary>
            Gets the amount of elapsed time represented in the collection
            </summary>
            <value>
            The elapsed time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.FramesPerSecond">
            <summary>
            Gets the frames per second.
            </summary>
            <value>
            The frames per second.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.StandardDeviation">
            <summary>
            Gets the standard deviation for the frame creation intervals
            </summary>
            <value>
            The standard deviation.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.AverageBuildTime">
            <summary>
            Gets the average build time for the frames in the collection
            </summary>
            <value>
            The average build time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameVirtualCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualFrameVirtualCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.#ctor(System.String,System.String,Ace.Visualization.Recorder.VisualResourceCollection,Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualFrameVirtualCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Initialize">
            <summary>
            Initializes the links to the frame files.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.ReadAllFrameIndexes(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Reads all frame indexes from the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Add(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.RemoveOldestFrame">
            <summary>
            Removes the oldest frame from the collection
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Contains(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.CopyTo(Ace.Visualization.Recorder.VisualFrame[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.Remove(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameVirtualCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisualState">
            <summary>
            Class tracking visibility states for a frame
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualState.ApplyStates">
            <summary>
            Gets or sets a value indicating whether states should be applied / updated
            </summary>
            <value>
            <c>true</c> if visibility states should be applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualState.VisibleKeys">
            <summary>
            Gets the visible keys.
            </summary>
            <value>
            The visible keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualState.HiddenKeys">
            <summary>
            Gets the hidden keys.
            </summary>
            <value>
            The hidden keys.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualState" /> class.
            </summary>
            <param name="applyStates">if set to <c>true</c> [apply states].</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualState" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.SerializeKeys(Ace.Visualization.Recorder.ISeralizationStream,System.String,System.String[])">
            <summary>
            Serializes the keys.
            </summary>
            <param name="stream">The stream.</param>
            <param name="keyName">Name of the key.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.DeserializeKeys(Ace.Visualization.Recorder.IDeseralizationStream,System.String)">
            <summary>
            Serializes the keys.
            </summary>
            <param name="stream">The stream.</param>
            <param name="keyName">Name of the key.</param>
            <returns>The deserialized items</returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.RecordVisibleStates(Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Records the visible states for a given group collection
            </summary>
            <param name="groups">The groups.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.IsTracked(System.String)">
            <summary>
            Determines whether the specified key is being tracked.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key is tracked; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.Apply(Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Applies the visible states to the groups.
            </summary>
            <param name="groups">The groups.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualState.ApplyState(System.String[],Ace.Visualization.Recorder.VisibilityGroupCollection,System.Boolean)">
            <summary>
            Applies the visibility states to a list of keys
            </summary>
            <param name="keys">The keys.</param>
            <param name="groups">The groups.</param>
            <param name="state">if set to <c>true</c> the visibility is enabled.</param>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisibilityGroupCollection">
            <summary>
            Manages the collection of visible objects
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisibilityGroupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ace.Visualization.Resources.VisibilityGroup"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Resources.VisibilityGroup"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisibilityGroupCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Deserialize(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Deserializes the object from the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisibilityGroupCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisibilityGroupCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Add(Ace.Visualization.Resources.VisibilityGroup)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds a range of items to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="items">The objects to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Contains(Ace.Visualization.Resources.VisibilityGroup)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.CopyTo(Ace.Visualization.Resources.VisibilityGroup[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Remove(Ace.Visualization.Resources.VisibilityGroup)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.CheckKeys(System.Collections.Generic.IList{System.String})">
            <summary>
            Removes any items that are not referenced in the list
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.IsKeyVisible(System.String)">
            <summary>
            Determines whether a specified key is visible.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the key is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.op_Equality(Ace.Visualization.Recorder.VisibilityGroupCollection,Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.op_Inequality(Ace.Visualization.Recorder.VisibilityGroupCollection,Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Returns true the components of two objects are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisibilityGroupCollection.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.RecordingManager">
            <summary>
            Manage a background operation to record the visual state of the system 
            over a period of time.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Recorder.RecordingManager.RenderRate">
            <summary>
            The rate at which the rendering manager operates
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.LoadRecording(System.String)">
            <summary>
            Loads a recording from a file into a recording manager
            </summary>
            <param name="file">The file.</param>
            <returns>The recording manager associated with the replay</returns>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.ObjectsToRender">
            <summary>
            Gets the objects which can be rendered.
            </summary>
            <value>
            The objects to render.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.Frames">
            <summary>
            Gets the frames being rendered
            </summary>
            <value>
            The frames.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.Resources">
            <summary>
            Gets the resources being rendered
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.VisibleGroups">
            <summary>
            Gets the visible groups.
            </summary>
            <value>
            The visible groups.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.CollisionConfigurations">
            <summary>
            Gets the collision configurations.
            </summary>
            <value>
            The collision configurations.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.Recorder">
            <summary>
            Gets the recorder that manages saving a recording to a file.
            </summary>
            <value>
            The recorder.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.RecordingManager.IsRendering">
            <summary>
            Gets a value indicating whether this instance is rendering.
            </summary>
            <value>
            <c>true</c> if this instance is rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.#ctor(Ace.Visualization.Recorder.VisualFrameCollection,Ace.Visualization.Recorder.VisualResourceCollection,Ace.Visualization.Recorder.VisibilityGroupCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.RecordingManager" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.RecordingManager" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.RecordingManager" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.AddObjectToRendering(Ace.Visualization.Resources.Abstract3DObject)">
            <summary>
            Adds an object to the list of objects to render.
            </summary>
            <param name="renderableObject">The renderable object.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.RemoveObjectFromRendering(Ace.Visualization.Resources.Abstract3DObject)">
            <summary>
            Removes the object from the rendering.
            </summary>
            <param name="renderableObject">The renderable object.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.StartRendering">
            <summary>
            Starts the background rendering operation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.Clear">
            <summary>
            Clears the rendering of all frames
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.StopRendering">
            <summary>
            Stops the background rendering operation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.Renderer">
            <summary>
            Performs the background rendering operation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.RenderSingleFrame">
            <summary>
            Renders a single frame in the display
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.ResolvePositions(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Resolves the positions of all objects in the frame
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.ManageBoundingBoxes(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Manages the bounding boxes.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.AddCollisionChecks(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Adds a collision check to the collision manager for processing.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.CalculateSceneCenter(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Calculates the scene center for the frame
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.ResolveParentPosition(Ace.Visualization.Recorder.VisualFrame,Ace.Visualization.Resources.DisplayElement,System.Collections.Generic.Dictionary{System.String,Ace.Visualization.DxTransform})">
            <summary>
            Resolves the position of the parent of the specified element
            </summary>
            <param name="frame">The frame.</param>
            <param name="element">The element.</param>
            <param name="resolvedPositions">The resolved positions.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.PruneOldFrames">
            <summary>
            Prunes any old frames in the collection
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.op_Equality(Ace.Visualization.Recorder.RecordingManager,Ace.Visualization.Recorder.RecordingManager)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.op_Inequality(Ace.Visualization.Recorder.RecordingManager,Ace.Visualization.Recorder.RecordingManager)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.RecordingManager.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.FrameModifiedEventArgs">
            <summary>
            Event argument describing a change to a frame collection
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Ace.Visualization.Recorder.FrameModifiedEventArgs.TotalFrameCount">
            <summary>
            Gets the total frame count in the frame collection.
            </summary>
            <value>
            The total frame count.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.FrameModifiedEventArgs.Added">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Visualization.Recorder.VisualFrame"/> is added.
            </summary>
            <value>
              <c>true</c> if added; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.FrameModifiedEventArgs.Frames">
            <summary>
            Gets the frame.
            </summary>
            <value>
            The frame.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.FrameModifiedEventArgs.FramesAffected">
            <summary>
            Gets the number of frames affected by the operation.
            </summary>
            <value>
            The frames affected.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.FrameModifiedEventArgs.#ctor(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.FrameModifiedEventArgs" /> class.
            </summary>
            <param name="added">if set to <c>true</c> the frame is added.</param>
            <param name="totalFrames">The total number of frames in the collection.</param>
            <param name="framesAffected">The frames affected.</param>
        </member>
        <member name="T:Ace.Visualization.Recorder.ResourceModifiedEventArgs">
            <summary>
            Event argument describing a change to a resource
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Ace.Visualization.Recorder.ResourceModifiedEventArgs.Added">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Visualization.Resources.Resource.VisualResource"/> is added.
            </summary>
            <value>
              <c>true</c> if added; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.ResourceModifiedEventArgs.Resources">
            <summary>
            Gets the resource.
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.ResourceModifiedEventArgs.KeyNames">
            <summary>
            Gets the key names.
            </summary>
            <value>
            The key names.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.ResourceModifiedEventArgs.#ctor(System.Boolean,Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.ResourceModifiedEventArgs"/> class.
            </summary>
            <param name="added">if set to <c>true</c> the resources are added.</param>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.ResourceModifiedEventArgs.#ctor(System.Boolean,Ace.Visualization.Resources.Resource.VisualResource[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.ResourceModifiedEventArgs"/> class.
            </summary>
            <param name="added">if set to <c>true</c> the resources are added.</param>
            <param name="resources">The resources.</param>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisualFrame">
            <summary>
            A collection of visual elements that are drawn at a moment in time
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.FrameCreationTime">
            <summary>
            Gets the frame creation time.
            </summary>
            <value>
            The frame creation time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.FrameBuildTime">
            <summary>
            Gets the amount of time spent building the frame.
            </summary>
            <value>
            The amount of time spent building the frame.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.Bounds">
            <summary>
            Gets or sets the bounds for the visible items in the scene
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.Elements">
            <summary>
            Gets the display elements that are to be rendered.
            </summary>
            <value>
            The elements.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.ResourceKeys">
            <summary>
            Gets the set of distinct resource keys referenced in the frame.
            </summary>
            <value>
            The resource keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.VisibilityKeys">
            <summary>
            Gets the set of distinct visibility keys referenced in the frame.
            </summary>
            <value>
            The resource keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrame.VisibilityStates">
            <summary>
            Gets the visibility states 
            </summary>
            <value>
            The visibility states.
            </value>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualFrame"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualFrame" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.AddElement(Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Adds the element to the frame
            </summary>
            <param name="elementToAdd">The element to add.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.AddElements(System.Collections.Generic.IEnumerable{Ace.Visualization.Resources.DisplayElement})">
            <summary>
            Adds the elements to the frame
            </summary>
            <param name="elementsToAdd">The elements to add.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.op_Equality(Ace.Visualization.Recorder.VisualFrame,Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.op_Inequality(Ace.Visualization.Recorder.VisualFrame,Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Returns true the components of two objects are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrame.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisualFrameCollection">
            <summary>
            A collection of VisualFrame objects
            </summary>
        </member>
        <member name="E:Ace.Visualization.Recorder.VisualFrameCollection.FramesModified">
            <summary>
            Event thrown when a frame is added or removed from the collection
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.ResourceKeys">
            <summary>
            Gets the list of all resource keys referenced in the collection.
            </summary>
            <value>
            The resource keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.VisibilityKeys">
            <summary>
            Gets the list of all visibility keys referenced in the collection.
            </summary>
            <value>
            The visibility keys.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ace.Visualization.Recorder.VisualFrame"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Recorder.VisualFrame"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.ElapsedTime">
            <summary>
            Gets the amount of elapsed time represented in the collection
            </summary>
            <value>
            The elapsed time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.FramesPerSecond">
            <summary>
            Gets the frames per second.
            </summary>
            <value>
            The frames per second.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.StandardDeviation">
            <summary>
            Gets the standard deviation for the frame creation intervals
            </summary>
            <value>
            The standard deviation.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.AverageBuildTime">
            <summary>
            Gets the average build time for the frames in the collection
            </summary>
            <value>
            The average build time.
            </value>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualFrameCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualFrameCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.Add(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.RemoveOldestFrame">
            <summary>
            Removes the oldest frame from the collection
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.Contains(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.CopyTo(Ace.Visualization.Recorder.VisualFrame[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.Remove(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.OnFrameModified(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Called when a resource is added or removed from the collection.
            </summary>
            <param name="framesAffected">The number of frames affected by the operation.</param>
            <param name="frameCount">The frame count.</param>
            <param name="added">if set to <c>true</c> the resource was added.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.AddTrackingKeys(Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Adds tracking keys to the tracking data structures
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.RemoveTrackingKeys(System.Int32,Ace.Visualization.Recorder.VisualFrame)">
            <summary>
            Removes tracking keys from the tracking data structures
            </summary>
            <param name="index">The index in the list of the removed item.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.op_Equality(Ace.Visualization.Recorder.VisualFrameCollection,Ace.Visualization.Recorder.VisualFrameCollection)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.op_Inequality(Ace.Visualization.Recorder.VisualFrameCollection,Ace.Visualization.Recorder.VisualFrameCollection)">
            <summary>
            Returns true the components of two objects are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualFrameCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Ace.Visualization.Recorder.VisualResourceCollection">
            <summary>
            Represents a collection of visual resources
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Recorder.VisualResourceCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Deserialize(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Deserializes the object from the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="E:Ace.Visualization.Recorder.VisualResourceCollection.ResourcesModified">
            <summary>
            Event thrown when a resources is added or removed from the collection
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualResourceCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Ace.Visualization.Resources.Resource.VisualResource"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Resources.Resource.VisualResource"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualResourceCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualResourceCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualResourceCollection.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Recorder.VisualResourceCollection.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.ToArray">
            <summary>
            Returns the resources as an array.
            </summary>
            <returns>The resources</returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Add(System.Collections.Generic.KeyValuePair{System.String,Ace.Visualization.Resources.Resource.VisualResource})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Add(System.String,Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Add(Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Adds an element to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.AddRange(Ace.Visualization.Resources.Resource.VisualResource[])">
            <summary>
            Adds an array of elements to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="itemsToAdd">The items to add.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,Ace.Visualization.Resources.Resource.VisualResource})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Ace.Visualization.Resources.Resource.VisualResource}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,Ace.Visualization.Resources.Resource.VisualResource})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.CheckKeys(System.String[])">
            <summary>
            Checks the allowed keys
            </summary>
            <param name="allowedKeys">The allowed keys.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.TryGetValue(System.String,Ace.Visualization.Resources.Resource.VisualResource@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.OnResourceModified(Ace.Visualization.Resources.Resource.VisualResource,System.Boolean)">
            <summary>
            Called when a resource is added or removed from the collection.
            </summary>
            <param name="resource">The resource.</param>
            <param name="added">if set to <c>true</c> the resource was added.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.OnResourceModified(System.Collections.Generic.ICollection{Ace.Visualization.Resources.Resource.VisualResource},System.Boolean)">
            <summary>
            Called when a resource is added or removed from the collection.
            </summary>
            <param name="resources">The resources.</param>
            <param name="added">if set to <c>true</c> the resource was added.</param>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.op_Equality(Ace.Visualization.Recorder.VisualResourceCollection,Ace.Visualization.Recorder.VisualResourceCollection)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.op_Inequality(Ace.Visualization.Recorder.VisualResourceCollection,Ace.Visualization.Recorder.VisualResourceCollection)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Recorder.VisualResourceCollection.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.CollisionInstance">
            <summary>
            Represents resources and positions associated with a collision source
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionInstance.Resources">
            <summary>
            Gets the resource associated with the collision
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionInstance.Elements">
            <summary>
            Gets the element defining the resource positions
            </summary>
            <value>
            The element
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.CollisionInstance.#ctor(Ace.Visualization.Collisions.ICollidableResource,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.CollisionInstance" /> class.
            </summary>
            <param name="resource">The resource.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.CollisionInstance.#ctor(Ace.Visualization.Collisions.ICollidableResource[],Ace.Visualization.Resources.DisplayElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.CollisionInstance" /> class.
            </summary>
            <param name="resources">The resource.</param>
            <param name="elements">The element.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.CollisionSource">
            <summary>
            Represents a source for collisions
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionSource.OwnerName">
            <summary>
            Gets the name of the owner
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionSource.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionSource.Index">
            <summary>
            Gets the index used to identify the collision source
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.CollisionSource.Owner">
            <summary>
            Gets the owner of the collision source
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.CollisionSource.#ctor(Ace.Visualization.Resources.Abstract3DObject,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.CollisionSource" /> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="ownerName">Name of the owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.CollisionSource.#ctor(Ace.Visualization.Resources.Abstract3DObject,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.CollisionSource" /> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="ownerName">Name of the owner.</param>
            <param name="name">The name.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.CollisionSource.GetCollisionDetails">
            <summary>
            Gets the collision details.
            </summary>
            <returns>The collision instance defining the resources and lcoations</returns>
        </member>
        <member name="T:Ace.Visualization.Resources.BoundingBox">
            <summary>
            Represents a bounding box for an object in the 3D display
            </summary>
            <remarks>This is an axis-aligned bounding box representation.</remarks>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.DX">
            <summary>
            Gets or sets the size of the bounding box in the X direction.
            </summary>
            <value>The DX value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.DY">
            <summary>
            Gets or sets the size of the bounding box in the Y direction.
            </summary>
            <value>The DY value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.DZ">
            <summary>
            Gets or sets the size of the bounding box in the Z direction.
            </summary>
            <value>The DZ value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.Center">
            <summary>
            Gets or sets the center of the bounding box.
            </summary>
            <value>The DZ value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MinimumX">
            <summary>
            Gets the minimum X point in the bounding region.
            </summary>
            <value>The minimum X value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MinimumY">
            <summary>
            Gets the minimum Y point in the bounding region.
            </summary>
            <value>The minimum Y value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MinimumZ">
            <summary>
            Gets the minimum Z point in the bounding region.
            </summary>
            <value>The minimum Z value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MaximumX">
            <summary>
            Gets the maximum X point in the bounding region.
            </summary>
            <value>The maximum X value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MaximumY">
            <summary>
            Gets the maximum Y point in the bounding region.
            </summary>
            <value>The maximum Y value.</value>
        </member>
        <member name="P:Ace.Visualization.Resources.BoundingBox.MaximumZ">
            <summary>
            Gets the maximum Z point in the bounding region.
            </summary>
            <value>The maximum Z value.</value>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor(Ace.Visualization.DxTransform)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox"/> class.
            </summary>
            <param name="boxCenter">The box center.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor(Ace.Visualization.DxTransform,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox"/> class.
            </summary>
            <param name="boxCenter">The box center.</param>
            <param name="width">The width.</param>
            <param name="length">The length.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor(Ace.Visualization.DxTransform,Ace.Visualization.Resources.BoundingBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox" /> class.
            </summary>
            <param name="boxOffset">The box offset.</param>
            <param name="box">The box.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.#ctor(Ace.Visualization.Resources.BoundingBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.BoundingBox"/> class.
            </summary>
            <param name="box">The box.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.UpdateBounds">
            <summary>
            Updates the min/max bounds of the bounding box.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.op_Equality(Ace.Visualization.Resources.BoundingBox,Ace.Visualization.Resources.BoundingBox)">
            <summary>
            Returns true the components of two bounding boxes are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.op_Inequality(Ace.Visualization.Resources.BoundingBox,Ace.Visualization.Resources.BoundingBox)">
            <summary>
            Returns true the components of two bounding boxes are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.DoesIntersect(Ace.Visualization.Resources.BoundingBox)">
            <summary>
            Calculates if there is overlap with the specified bounding box.
            </summary>
            <param name="b">The bounding box to check against.</param>
            <returns>Is an overlap detected</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.GetHashCode">
            <summary>
            Return a hash code for this bounding box.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.BoundingBox.Intersect(Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single@)">
            <summary>
            Test if the pick ray intersects the bonding box.
            </summary>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray direction.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            Does the ray intersect the bounding box
            </returns>
            <remarks>
            This algorithm was taken from the book 3D Math Primer for Graphics and Game Development.
            </remarks>
        </member>
        <member name="T:Ace.Visualization.Resources.Operations.RulerSelectPointOperation">
            <summary>
            Operation used by ruler class for selecting a point
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.RulerSelectPointOperation.Ruler">
            <summary>
            Gets the ruler being operated on
            </summary>
            <value>
            The ruler.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.RulerSelectPointOperation.#ctor(Ace.Visualization.Resources.Abstract3DObject,System.String,System.Drawing.Bitmap,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Operations.RulerSelectPointOperation" /> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="index">The index used to indentify capture events</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.RulerSelectPointOperation.OnRender(System.Collections.Generic.List{Ace.Visualization.Resources.Resource.VisualResource},System.Collections.Generic.List{Ace.Visualization.Resources.DisplayElement},System.Collections.Generic.List{Ace.Visualization.Resources.VisibilityGroup})">
            <summary>
            Perform any rendering operations.
            </summary>
            <param name="resources">The resources.</param>
            <param name="elements">The elements.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Operations.Operation">
            <summary>
            Represent an operation or action that can be performed on a simulation object 
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Operations.Operation.DefaultGroup">
            <summary>
            The index of the default operation grouping
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Name">
            <summary>
            Gets or sets the name associated with the operation
            </summary>
            <value>
            The name associated with the operation
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Icons">
            <summary>
            Gets the images associated with the operation
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.ActiveImageIndex">
            <summary>
            Gets or sets the index of the active icon in the image collection.
            </summary>
            <value>
            The index of the active icon.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Owner">
            <summary>
            Gets the owner of the operation
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Parent">
            <summary>
            Gets the parent control the tile is associated with
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.Visualization.Resources.Operations.Operation"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Accented">
            <summary>
            Gets or sets a value indicating whether this instance is accented by the user
            </summary>
            <value>
            <c>true</c> if this instance is accented; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Exposed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.Visualization.Resources.Operations.Operation"/> is exposed to the user.
            </summary>
            <value>
              <c>true</c> if exposed to the user; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Group">
            <summary>
            Gets or sets the grouping the operation belongs to
            </summary>
            <value>
            The group number associated with the operation
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.Visualization.Resources.Operations.Operation"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.UpdateSelection">
            <summary>
            Gets or sets a value indicating whether the operation requires the selected object be updated after the
            operation completes
            </summary>
            <value>
            <c>true</c> if the selection should be updated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Operations.Operation.CaptureInput">
            <summary>
            Gets or sets a value indicating whether the operation captures mouse clicks when selected. If the value is -1, then no input is captured.
            </summary>
            <value>
              <c>true</c> if the operation captures input; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ace.Visualization.Resources.Operations.Operation.Selected">
            <summary>
            Event indicating the operation has been selected
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.Operations.Operation.Unselected">
            <summary>
            Event indicating the operation has been unselected
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.Operations.Operation.ActivationChanged">
            <summary>
            Event indicating the activation state has changed.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.#ctor(Ace.Visualization.Resources.Abstract3DObject,System.String,System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Operations.Operation" /> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.#ctor(Ace.Visualization.Resources.Abstract3DObject,System.String,System.Drawing.Bitmap[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Operations.Operation" /> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="images">The images to associate with the operation.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.Finalize">
            <summary>
            Calls the Dispose(false) method to complete the implementation
            of the Dispose pattern.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.Select">
            <summary>
            Indicate the operation is selected
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.Unselect">
            <summary>
            Indicate the operation has been unselected
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Visualization.Resources.Operations.Operation.OnRender(System.Collections.Generic.List{Ace.Visualization.Resources.Resource.VisualResource},System.Collections.Generic.List{Ace.Visualization.Resources.DisplayElement},System.Collections.Generic.List{Ace.Visualization.Resources.VisibilityGroup})">
            <summary>
            Perform any rendering operations.
            </summary>
            <param name="resources">The resources.</param>
            <param name="elements">The elements.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.ConeRenderer">
            <summary>
            Render a Cone within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.ConeRenderer.Cone">
            <summary>
            Gets the cone being rendered
            </summary>
            <value>
            The cone.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ConeRenderer.#ctor(Ace.Visualization.Resources.Resource.ConeResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.ConeRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ConeRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ConeRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ConeRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.RulerRenderer">
            <summary>
            Render the ruler within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.RulerRenderer.Ruler">
            <summary>
            Gets the ruler being rendered
            </summary>
            <value>
            The ruler.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.RulerRenderer.#ctor(Ace.Visualization.Resources.Resource.RulerResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.RulerRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.RulerRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.RulerRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.RulerRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.RulerRenderer.Render2D(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Render2s the d.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.AxesRenderer">
            <summary>
            Render an axes display within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.AxesRenderer.Axes">
            <summary>
            Gets the axes being rendered
            </summary>
            <value>
            The arrow.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.AxesRenderer.#ctor(Ace.Visualization.Resources.Resource.AxesResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.AxesRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.AxesRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.AxesRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.AxesRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.ArrowRenderer">
            <summary>
            Render an arrow within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.ArrowRenderer.Arrow">
            <summary>
            Gets the arrow being rendered
            </summary>
            <value>
            The arrow.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ArrowRenderer.#ctor(Ace.Visualization.Resources.Resource.ArrowResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.ArrowRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ArrowRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ArrowRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.ArrowRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.CurveRenderer">
            <summary>
            Render a curve within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.CurveRenderer.Curve">
            <summary>
            Gets the curve being rendered
            </summary>
            <value>
            The curve.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CurveRenderer.#ctor(Ace.Visualization.Resources.Resource.CurveResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.CurveRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CurveRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CurveRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CurveRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.FrustumRenderer">
            <summary>
            Render a Frustum within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.FrustumRenderer.Frustum">
            <summary>
            Gets the frustum being rendered
            </summary>
            <value>
            The frustum.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FrustumRenderer.#ctor(Ace.Visualization.Resources.Resource.FrustumResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.FrustumRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FrustumRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FrustumRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FrustumRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.SphereRenderer">
            <summary>
            Render a sphere within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.SphereRenderer.Sphere">
            <summary>
            Gets the sphere being rendered
            </summary>
            <value>
            The sphere.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.SphereRenderer.#ctor(Ace.Visualization.Resources.Resource.SphereResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.SphereRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.SphereRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.SphereRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.SphereRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.CylinderRenderer">
            <summary>
            Render a Cylinder within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.CylinderRenderer.Cylinder">
            <summary>
            Gets the cylinder being rendered
            </summary>
            <value>
            The cylinder.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CylinderRenderer.#ctor(Ace.Visualization.Resources.Resource.CylinderResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.CylinderRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CylinderRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CylinderRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.CylinderRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.BitmapRenderer">
            <summary>
            Render a bitmap within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.BitmapRenderer.Bitmap">
            <summary>
            Gets the bitmap being rendered
            </summary>
            <value>
            The bitmap.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BitmapRenderer.#ctor(Ace.Visualization.Resources.Resource.BitmapResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.BitmapRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BitmapRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BitmapRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BitmapRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer">
            <summary>
            Render the factory floor within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer.FactoryFloor">
            <summary>
            Gets the factory floor being rendered
            </summary>
            <value>
            The factory floor.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer.#ctor(Ace.Visualization.Resources.Resource.FactoryFloorResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.FactoryFloorRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.WavefrontRenderer">
            <summary>
            Render a wavefront file within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.WavefrontRenderer.Wavefront">
            <summary>
            Gets the wavefront being rendered
            </summary>
            <value>
            The wavefront.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.WavefrontRenderer.#ctor(Ace.Visualization.Resources.Resource.WavefrontResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.WavefrontRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.WavefrontRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.WavefrontRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.WavefrontRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.BoxRenderer">
            <summary>
            Render a box within DirectX
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.BoxRenderer.Box">
            <summary>
            Gets the box being rendered
            </summary>
            <value>
            The box.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BoxRenderer.#ctor(Ace.Visualization.Resources.Resource.BoxResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.BoxRenderer"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BoxRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BoxRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.BoxRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Renderers.VisualResourceRenderer">
            <summary>
            Base class managing the display of a resource for a DirectX device
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Resource">
            <summary>
            Gets the resource associated with the renderer
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.KeyName">
            <summary>
            Gets or sets the name of the key used to identify this resource
            </summary>
            <value>
            The name of the key.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.IsColliding">
            <summary>
            Gets or sets a value indicating whether this resource should be drawn as collided.
            </summary>
            <value>
            <c>true</c> if this instance is colliding; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.#ctor(Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Renderers.VisualResourceRenderer"/> class.
            </summary>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Ace.Visualization.Resources.Renderers.VisualResourceRenderer"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Initialize(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Initializes the renderer for the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Render(Ace.Visualization.Display.Primitives.DxRenderInfo)">
            <summary>
            Render to the 3D display
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Renderers.VisualResourceRenderer.Render2D(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Render to the 2D display (overlay)
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.ConeResource">
            <summary>
            Represents a cone
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ConeResource.BaseRadius">
            <summary>
            Gets the base radius of the shape
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ConeResource.TopRadius">
            <summary>
            Gets the top radius of the shape
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ConeResource.TopLocation">
            <summary>
            Gets the location of the top of the shape 
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ConeResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ConeResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.#ctor(System.Single,System.Single,Ace.Visualization.DxTransform,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.ConeResource" /> class.
            </summary>
            <param name="baseRadius">The base radius.</param>
            <param name="topRadius">The top radius.</param>
            <param name="topLocation">The top location.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.ConeResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.GetVertexData(Ace.Visualization.DxVector[]@,Ace.Visualization.Collisions.Boundary.Triangle[]@)">
            <summary>
            Gets the vertex data associated with the collidable resource
            </summary>
            <param name="vertexData">The vertex data.</param>
            <param name="faces">The indexes defining the faces.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.op_Equality(Ace.Visualization.Resources.Resource.ConeResource,Ace.Visualization.Resources.Resource.ConeResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.op_Inequality(Ace.Visualization.Resources.Resource.ConeResource,Ace.Visualization.Resources.Resource.ConeResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ConeResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.RulerResource">
            <summary>
            Represents the ruler display
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.SceneBounds">
            <summary>
            Gets the boundaries of the visible scene
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.Width">
            <summary>
            Gets or sets the width of the ruler
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.Length">
            <summary>
            Gets or sets the length of the ruler
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.Thickness">
            <summary>
            Gets or sets the thickness (z) of the ruler
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.RenderLengthText">
            <summary>
            Gets or sets a value indicating whether to render the text into the display.
            </summary>
            <value>
              <c>true</c> if we render the text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.RulerResource.TextPosition">
            <summary>
            Gets or sets the position where the text is rendered
            </summary>
            <value>
            The text position.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.RulerResource" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.RulerResource" /> class.
            </summary>
            <param name="length">The length.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.RulerResource" /> class.
            </summary>
            <param name="length">The length.</param>
            <param name="width">The width.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.RulerResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.op_Equality(Ace.Visualization.Resources.Resource.RulerResource,Ace.Visualization.Resources.Resource.RulerResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.op_Inequality(Ace.Visualization.Resources.Resource.RulerResource,Ace.Visualization.Resources.Resource.RulerResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.RulerResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.AxesResource">
            <summary>
            Represent a group of axes
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.AxesResource.DefaultXAxisColor">
            <summary>
            The default x axis color
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.AxesResource.DefaultYAxisColor">
            <summary>
            The default y axis color
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.AxesResource.DefaultZAxisColor">
            <summary>
            The default z axis color
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.AxesResource.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.AxesResource.Radius">
            <summary>
            Gets the radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.AxesResource.TipLength">
            <summary>
            Gets the length of the tip.
            </summary>
            <value>
            The length of the tip.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.AxesResource.TipRadius">
            <summary>
            Gets the tip radius.
            </summary>
            <value>
            The tip radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.AxesResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.AxesResource" /> class.
            </summary>
            <param name="length">The length.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.AxesResource" /> class.
            </summary>
            <param name="length">The length.</param>
            <param name="radius">The radius.</param>
            <param name="tipLength">Length of the tip.</param>
            <param name="tipRadius">The tip radius.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.AxesResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.op_Equality(Ace.Visualization.Resources.Resource.AxesResource,Ace.Visualization.Resources.Resource.AxesResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.op_Inequality(Ace.Visualization.Resources.Resource.AxesResource,Ace.Visualization.Resources.Resource.AxesResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.AxesResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.ArrowResource">
            <summary>
            Represent an arrow
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.Radius">
            <summary>
            Gets the radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.TipLength">
            <summary>
            Gets the length of the tip.
            </summary>
            <value>
            The length of the tip.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.TipRadius">
            <summary>
            Gets the tip radius.
            </summary>
            <value>
            The tip radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.ArrowResource.ScaleToZoom">
            <summary>
            Gets or sets a value indicating whether the handle will scale based on the current zoom setting.
            </summary>
            <value>
              <c>true</c> if the handle is scaled relative to the zoom; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.#ctor(System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.ArrowResource" /> class.
            </summary>
            <param name="length">The length.</param>
            <param name="radius">The radius.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.#ctor(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.ArrowResource" /> class.
            </summary>
            <param name="length">The length.</param>
            <param name="radius">The radius.</param>
            <param name="tipLength">Length of the tip.</param>
            <param name="tipRadius">The tip radius.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.ArrowResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.op_Equality(Ace.Visualization.Resources.Resource.ArrowResource,Ace.Visualization.Resources.Resource.ArrowResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.op_Inequality(Ace.Visualization.Resources.Resource.ArrowResource,Ace.Visualization.Resources.Resource.ArrowResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.ArrowResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.CurveResource">
            <summary>
            Represents a curved section
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.Radius">
            <summary>
            Gets the radius of the shape
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.Thickness">
            <summary>
            Gets the thickness of the shape
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.BeginAngle">
            <summary>
            Gets the begining angle of the shape
            </summary>
            <value>
            The begining angle.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.EndAngle">
            <summary>
            Gets the end angle of the shape
            </summary>
            <value>
            The end angle.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.NubHeight">
            <summary>
            Gets the height of the nubs around the curve
            </summary>
            <value>
            The end angle.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CurveResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.#ctor(System.Single,System.Single,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.CurveResource" /> class.
            </summary>
            <param name="radius">The radius.</param>
            <param name="thickness">The thickness.</param>
            <param name="beginAngle">The begining angle.</param>
            <param name="endAngle">The ending angle.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.CurveResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.op_Equality(Ace.Visualization.Resources.Resource.CurveResource,Ace.Visualization.Resources.Resource.CurveResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.op_Inequality(Ace.Visualization.Resources.Resource.CurveResource,Ace.Visualization.Resources.Resource.CurveResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CurveResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.TransparencyMode">
            <summary>
            Defines the modes of transparency for an Appearance
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.None">
            <summary>
            No transparency
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.Normal">
            <summary>
            Normal transparency mode: source and destination blend = one and min blend operation
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.BasedOnAlpha">
            <summary>
            Transparency using the alpha color transparency. This assumes the color
            passed to the SimulationAppearance will have an alpha value set.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.Custom">
            <summary>
            Transparent rendering will be in effect, but it will be handled by the 
            geometry being rendered. This will force the rendering in both transparent 
            and non-transparent display.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.Complete">
            <summary>
            Object is completely transparent
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.Both">
            <summary>
            Indicates an object may be rendered both as transparent and as solid.
            The rendere will be invoked for both transparent and non-transparent displays.
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.TransparencyMode.OverlayImage">
            <summary>
            Transparency using when drawing overlay images		
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.FrustumResource">
            <summary>
            Represents a Frustum
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FrustumResource.BaseDiameter">
            <summary>
            Gets the diameter of the shape at the base
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FrustumResource.TopDiameter">
            <summary>
            Gets the diameter of the shape at the top
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FrustumResource.Height">
            <summary>
            Gets the height of the shape
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FrustumResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FrustumResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.#ctor(System.Single,System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.FrustumResource" /> class.
            </summary>
            <param name="baseDiameter">The base diameter.</param>
            <param name="topDiameter">The top diameter.</param>
            <param name="height">The height.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.FrustumResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.CheckIntersection(Ace.Visualization.DxTransform,Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single,System.Single@)">
            <summary>
            Checks for intersection with a cylinder
            </summary>
            <param name="origin">The origin of the cylinder.</param>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray direction.</param>
            <param name="pickRayDistance">The distance along the pick ray.</param>
            <param name="distance">The calculated distance to the cylinder.</param>
            <returns>
            Was an intersection detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.op_Equality(Ace.Visualization.Resources.Resource.FrustumResource,Ace.Visualization.Resources.Resource.FrustumResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.op_Inequality(Ace.Visualization.Resources.Resource.FrustumResource,Ace.Visualization.Resources.Resource.FrustumResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FrustumResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.IntersectionParemeters">
            <summary>
            Parameters used in an intersection test
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.IntersectionParemeters.ZoomLevel">
            <summary>
            The Zoom level for the active display
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.IntersectionParemeters.WorldLocation">
            <summary>
            The world location of the object being tested against
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.IntersectionParemeters.PickRayOrigin">
            <summary>
            The pick ray origin
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.Resource.IntersectionParemeters.PickRayDir">
            <summary>
            The pick ray direction
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.IntersectionParemeters.#ctor(Ace.Visualization.Display.Primitives.DxRenderInfo,Ace.Visualization.DxTransform,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.IntersectionParemeters"/> struct.
            </summary>
            <param name="context">The context.</param>
            <param name="worldLocation">The world location.</param>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray dir.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.SphereResource">
            <summary>
            Represent a sphere
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.SphereResource.Radius">
            <summary>
            Gets the radius.
            </summary>
            <value>
            The radius
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.SphereResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.SphereResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.SphereResource.ScaleToZoom">
            <summary>
            Gets or sets a value indicating whether the handle will scale based on the current zoom setting.
            </summary>
            <value>
              <c>true</c> if the handle is scaled relative to the zoom; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.#ctor(System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.SphereResource" /> class.
            </summary>
            <param name="radius">The radius.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.SphereResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.op_Equality(Ace.Visualization.Resources.Resource.SphereResource,Ace.Visualization.Resources.Resource.SphereResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.op_Inequality(Ace.Visualization.Resources.Resource.SphereResource,Ace.Visualization.Resources.Resource.SphereResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.SphereResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.FactoryFloorResource">
            <summary>
            Represents the tiled Factory Floor display
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.FactoryFloorResource.SceneBounds">
            <summary>
            Gets the boundaries of the visible scene
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.FactoryFloorResource" /> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.FactoryFloorResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.op_Equality(Ace.Visualization.Resources.Resource.FactoryFloorResource,Ace.Visualization.Resources.Resource.FactoryFloorResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.op_Inequality(Ace.Visualization.Resources.Resource.FactoryFloorResource,Ace.Visualization.Resources.Resource.FactoryFloorResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.FactoryFloorResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.CylinderResource">
            <summary>
            Represents a Cylinder
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CylinderResource.Radius">
            <summary>
            Gets the radius of the shape
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CylinderResource.Height">
            <summary>
            Gets the height of the shape
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CylinderResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.CylinderResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.#ctor(System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.CylinderResource" /> class.
            </summary>
            <param name="radius">The radius.</param>
            <param name="height">The height.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.CylinderResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.CheckIntersection(Ace.Visualization.DxTransform,Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single,System.Single,System.Single,System.Single@)">
            <summary>
            Checks for intersection with a cylinder
            </summary>
            <param name="origin">The origin of the cylinder.</param>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray direction.</param>
            <param name="pickRayDistance">The distance along the pick ray.</param>
            <param name="radius">The radius of the cylinder.</param>
            <param name="height">The height of the cylinder.</param>
            <param name="distance">The calculated distance to the cylinder.</param>
            <returns>Was an intersection detected</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.DoesIntersect(Ace.Visualization.DxTransform,Ace.Visualization.DxVector,Ace.Visualization.DxVector,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Checks for intersection with an infinite cylinder
            </summary>
            <param name="origin">The origin of the cylinder.</param>
            <param name="pickRayOrigin">The pick ray origin.</param>
            <param name="pickRayDir">The pick ray direction.</param>
            <param name="pickRayDistance">The distance along the pick ray.</param>
            <param name="radius">The radius of the cylinder.</param>
            <param name="height">The height of the cylinder.</param>
            <param name="enteringDistance">The entering distance.</param>
            <param name="exitingDistance">The exiting distance.</param>
            <returns>
            Was an intersection detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.op_Equality(Ace.Visualization.Resources.Resource.CylinderResource,Ace.Visualization.Resources.Resource.CylinderResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.op_Inequality(Ace.Visualization.Resources.Resource.CylinderResource,Ace.Visualization.Resources.Resource.CylinderResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.CylinderResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.BitmapResource">
            <summary>
            Represents a bitmap Handle
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BitmapResource.BitmapData">
            <summary>
            Gets the bitmap data associated with the resource
            </summary>
            <value>
            The bitmap data.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BitmapResource.Height">
            <summary>
            Gets the height of the area used to display the bitmap
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BitmapResource.Width">
            <summary>
            Gets the width of the area used to display the bitmap
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.#ctor(System.Drawing.Bitmap,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BitmapResource" /> class.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="key">The key.</param>
            <param name="height">The height.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.#ctor(System.Drawing.Bitmap,System.Single,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BitmapResource" /> class.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="scale">The scale for the image. Usually between 0.1 - 1.0.</param>
            <param name="key">The key.</param>
            <param name="height">The height.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BitmapResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.SubsampleImage(System.Drawing.Bitmap,System.Single)">
            <summary>
            Subsamples an image.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="percentage">The percentage.</param>
            <returns>The subsampled image</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.op_Equality(Ace.Visualization.Resources.Resource.BitmapResource,Ace.Visualization.Resources.Resource.BitmapResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.op_Inequality(Ace.Visualization.Resources.Resource.BitmapResource,Ace.Visualization.Resources.Resource.BitmapResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BitmapResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.BoxResource">
            <summary>
            Represent a box
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.DX">
            <summary>
            Gets the Size in the X direction.
            </summary>
            <value>
            The size in X
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.DY">
            <summary>
            Gets the Size in the Y direction.
            </summary>
            <value>
            The size in Y
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.DZ">
            <summary>
            Gets the Size in the Z direction.
            </summary>
            <value>
            The size in Z
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.Color">
            <summary>
            Gets the Color of the shape
            </summary>
            <value>
            The color
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.BoxResource.Wireframe">
            <summary>
            Gets a value indicating if the display should be a wireframe.
            </summary>
            <value>
              <c>true</c> if wireframe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.#ctor(System.Single,System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BoxResource" /> class.
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <param name="dz">The dz.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.#ctor(Ace.Visualization.Resources.BoundingBox,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BoxResource" /> class.
            </summary>
            <param name="bouningBox">The bouning box.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.BoxResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.GetVertexData(Ace.Visualization.DxVector[]@,Ace.Visualization.Collisions.Boundary.Triangle[]@)">
            <summary>
            Gets the vertex data associated with the collidable resource
            </summary>
            <param name="vertexData">The vertex data.</param>
            <param name="faces">The indexes defining the faces.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.GetVertexData(System.Single,System.Single,System.Single,Ace.Visualization.DxVector[]@,Ace.Visualization.Collisions.Boundary.Triangle[]@)">
            <summary>
            Gets the vertex data associated with the collidable resource
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <param name="dz">The dz.</param>
            <param name="vertexData">The vertex data.</param>
            <param name="faces">The indexes defining the faces.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.op_Equality(Ace.Visualization.Resources.Resource.BoxResource,Ace.Visualization.Resources.Resource.BoxResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.op_Inequality(Ace.Visualization.Resources.Resource.BoxResource,Ace.Visualization.Resources.Resource.BoxResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.BoxResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.WavefrontResourceFactory">
            <summary>
            Helper object that caches WaveFront resources so they can be shared
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResourceFactory.GetResource(System.String)">
            <summary>
            Gets the resource.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.VisualResource">
            <summary>
            Represent something that can be displayed in the visualization
            </summary>	
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.VisualResource.KeyName">
            <summary>
            Gets or sets the name of the key used to identify this resource.
            </summary>
            <value>
            The name of the key identifying the resource
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.VisualResource.Bounds">
            <summary>
            Gets or sets the bounds of the object
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.VisualResource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.VisualResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.Create(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Creates a resource from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>The renderable object</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.op_Equality(Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.op_Inequality(Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.VisualResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Resource.WavefrontResource">
            <summary>
            Represents a Wavefront file
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Resource.WavefrontResource.Data">
            <summary>
            Gets the wavefront data
            </summary>
            <value>
            The wavefront data.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.WavefrontResource"/> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.WavefrontResource" /> class.
            </summary>
            <param name="file">The file.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Resource.WavefrontResource" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.CalculateBounds">
            <summary>
            Calculates the bounds.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.Create">
            <summary>
            Creates a renderable instance of the resource
            </summary>
            <returns>
            The renderable object
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.IntersectTest(Ace.Visualization.Resources.Resource.IntersectionParemeters,System.Single@)">
            <summary>
            Performs an intersection test for the specified element
            </summary>
            <param name="parameters">The parameters used in the check.</param>
            <param name="intersectionDistance">The intersection distance.</param>
            <returns>
            The distance to the object or float.PositiveInfinity if no intersection was detected
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.IntersectTest(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Performs an intersection test on a triangle defined by 3 vertices
            </summary>
            <param name="p0">The first vertex.</param>
            <param name="p1">The second vertex.</param>
            <param name="p2">The third vertex.</param>
            <param name="pickRayO">The ray origin.</param>
            <param name="pickRayD">The ray direction.</param>
            <returns>The distance to the intersection point</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.GetVertexData(Ace.Visualization.DxVector[]@,Ace.Visualization.Collisions.Boundary.Triangle[]@)">
            <summary>
            Gets the vertex data associated with the collidable resource
            </summary>
            <param name="vertexData">The vertex data.</param>
            <param name="faces">The indexes defining the faces.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.op_Equality(Ace.Visualization.Resources.Resource.WavefrontResource,Ace.Visualization.Resources.Resource.WavefrontResource)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.op_Inequality(Ace.Visualization.Resources.Resource.WavefrontResource,Ace.Visualization.Resources.Resource.WavefrontResource)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Resource.WavefrontResource.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.RulerObject">
            <summary>
            Represents a ruler in the 3D dispalay
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.RulerObject.RulerName">
            <summary>
            The univarsal name of the factory floor
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.RulerObject.RulerVisibility">
            <summary>
            Gets the ruler visibility control property
            </summary>
            <value>
            The ruler visibility control
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.RulerObject"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.OnCreateOperations">
            <summary>
            Create any operations required by the object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.OnRender(System.Collections.Generic.List{Ace.Visualization.Resources.Resource.VisualResource},System.Collections.Generic.List{Ace.Visualization.Resources.DisplayElement},System.Collections.Generic.List{Ace.Visualization.Resources.VisibilityGroup})">
            <summary>
            Perform any rendering operations.
            </summary>
            <param name="resources">The resources.</param>
            <param name="elements">The elements.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.OnRegisterPointCapture(Ace.Visualization.Display.Primitives.DxPointCapture,Ace.Visualization.DxVector)">
            <summary>
            Called when a point capture event occurs.
            </summary>
            <param name="pointCapture">The point capture information.</param>
            <param name="point">The selected point.</param>
            <returns>
            Has the point capture operation completed
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.OnValidateCaptureState(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Called when the point capture state needs to be validated.
            </summary>
            <param name="device">The device.</param>
            <returns>
            True if the capture operation should be maintained
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.ArrangeTiles(Ace.Visualization.Display.Primitives.DxDevice,Ace.Visualization.Display.Primitives.Tiles.TileBase[])">
            <summary>
            Arranges the tiles associated with the object in the rendering context.
            </summary>
            <param name="device">The device.</param>
            <param name="tiles">The tiles to arrange.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.Select(Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Indicates the element associated with the object was selected.
            </summary>
            <param name="selectedElement">The selected element.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.Unselect">
            <summary>
            Indicates the object was unselected.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.CenterHandleElement_HandleDragged(System.Object,System.EventArgs)">
            <summary>
            Handles the HandleDragged event of the CenterHandleElement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.SideHandle1Element_HandleDragged(System.Object,System.EventArgs)">
            <summary>
            Handles the HandleDragged event of the SideHandle1Element control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.SideHandle2Element_HandleDragged(System.Object,System.EventArgs)">
            <summary>
            Handles the HandleDragged event of the SideHandle2Element control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.RulerObject.UpdateResources(System.Single)">
            <summary>
            Updates the resources based on the size of the ruler
            </summary>
            <param name="distance">The distance.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.InteractiveDisplayElement">
            <summary>
            Identifies a resource displayed at a specific location in the 3D coordinates
            where the user can interact with the element
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes">
            <summary>
            The axes that are allowed
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.X">
            <summary>
            Motion is allowed in the X axis
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.Y">
            <summary>
            Motion is allowed in the Y axis
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.Z">
            <summary>
            Motion is allowed in the Z axis
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.Yaw">
            <summary>
            Motion is allowed around yaw
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.Pitch">
            <summary>
            Motion is allowed around pitch
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes.Roll">
            <summary>
            Motion is allowed around roll
            </summary>		
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.Priority">
            <summary>
            Gets or sets the priority of the edit point
            </summary>
            <value>
            The priority of the edit point
            </value>
            <remarks>
            The priority defines the order in which edit handles are checked when selecting with a mouse. 
            All handles at the same priority level are considered equal and the closest one in that group is selected.
            </remarks>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.AllowedMotions">
            <summary>
            Gets the axes where motions are allowed.
            </summary>
            <value>
            The allowed axis motions.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.CanBeDetected">
            <summary>
            Gets a value indicating whether this instance can be detected.
            </summary>
            <value>
            <c>true</c> if this instance can be detecetd; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.OriginLocation">
            <summary>
            Gets or sets the origin location of the drag operation
            </summary>
            <value>
            The origin location.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.DragViewOffset">
            <summary>
            Gets the offset (unfiltered) relative to the view.
            </summary>
            <value>
            The drag view offset.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.DragOffset">
            <summary>
            Gets the amount the element has been dragged.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.DragObjectOffset">
            <summary>
            Gets the offset relative to the object coordinates.
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.InteractiveDisplayElement.DragAnchor">
            <summary>
            Gets the location in the scene that was selected for dragging.
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.InteractiveDisplayElement.StartDrag">
            <summary>
            Event indicating the handle has started dragging
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.InteractiveDisplayElement.StopDrag">
            <summary>
            Event indicating the handle has started dragging
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.InteractiveDisplayElement.HandleDragged">
            <summary>
            Event indicating the handle has been dragged
            </summary>
        </member>
        <member name="E:Ace.Visualization.Resources.InteractiveDisplayElement.BeforeDetection">
            <summary>
            Event thrown before the handle is being detected. 
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.InteractiveDisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="motions">The allowed motions.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.DxTransform,Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.InteractiveDisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="location">The location.</param>		
            <param name="motions">The allowed motions.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.InteractiveDisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="origin">The origin.</param>
            <param name="location">The location.</param>		
            <param name="motions">The allowed motions.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.VisibilityGroup,Ace.Visualization.DxTransform,Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.InteractiveDisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="group">The group.</param>
            <param name="location">The location.</param>
            <param name="motions">The allowed motions.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.VisibilityGroup,Ace.Visualization.DxTransform,Ace.Visualization.DxTransform,Ace.Visualization.Resources.InteractiveDisplayElement.AllowedAxes)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.InteractiveDisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="group">The group.</param>
            <param name="origin">The origin.</param>
            <param name="location">The location.</param>
            <param name="motions">The allowed motions.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.DisplayElement" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.InitializeTracking">
            <summary>
            Initializes the tracking.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.StartDragOperation(Ace.Visualization.DxTransform)">
            <summary>
            Starts the drag operation.
            </summary>
            <param name="pickedPoint">The picked point.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.CancelDragOperation">
            <summary>
            Cancels the drag operation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.DragOperation(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform)">
            <summary>
            Indicates that the handle has been dragged
            </summary>
            <param name="offset">The amount the point has been dragged relative to the object.</param>
            <param name="viewOffset">The amount the point has been dragged relative to the viewport.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.InteractiveDisplayElement.StopDragOperation">
            <summary>
            Stop the drag operation.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.FactoryFloorObject">
            <summary>
            Represents a factory floor in the 3D dispalay
            </summary>
        </member>
        <member name="F:Ace.Visualization.Resources.FactoryFloorObject.FactoryFloorName">
            <summary>
            The univarsal name of the factory floor
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.FactoryFloorObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.FactoryFloorObject"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.FactoryFloorObject.OnRender(System.Collections.Generic.List{Ace.Visualization.Resources.Resource.VisualResource},System.Collections.Generic.List{Ace.Visualization.Resources.DisplayElement},System.Collections.Generic.List{Ace.Visualization.Resources.VisibilityGroup})">
            <summary>
            Perform any rendering operations.
            </summary>
            <param name="resources">The resources.</param>
            <param name="elements">The elements.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Abstract3DObject">
            <summary>
            Base class describing how an object is to be respresented in the virtual display
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Abstract3DObject.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Abstract3DObject.Identifier">
            <summary>
            Gets a unique identifier for the object.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Abstract3DObject.Operations">
            <summary>
            Gets the operations.
            </summary>
            <value>
            The operations.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Abstract3DObject"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Initialize">
            <summary>
            Initializes all resources
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnCreateOperations">
            <summary>
            Create any operations required by the object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.AddOperation(Ace.Visualization.Resources.Operations.Operation)">
            <summary>
            Adds the operation to the list of operations associated with the rendering
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnCreateCollisionSources">
            <summary>
            Create any collision sources exposed by the object
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnCreateVisibilityGroups">
            <summary>
            Create any visibility resources needed for rendering.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnCreateResources">
            <summary>
            Create any resources for the rendering.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Render(Ace.Visualization.Resources.Resource.VisualResource[]@,Ace.Visualization.Resources.DisplayElement[]@,Ace.Visualization.Resources.VisibilityGroup[]@)">
            <summary>
            Called when rendering the object to the virtual display.
            </summary>
            <param name="resources">The list of resources that need to be added to the rendering.</param>
            <param name="elements">The list of elements describing how resources are to be displayed.</param>
            <param name="groups">The list of groups defining the visibility of the elements.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnRender(System.Collections.Generic.List{Ace.Visualization.Resources.Resource.VisualResource},System.Collections.Generic.List{Ace.Visualization.Resources.DisplayElement},System.Collections.Generic.List{Ace.Visualization.Resources.VisibilityGroup})">
            <summary>
            Perform any rendering operations.
            </summary>
            <param name="resources">The resources.</param>
            <param name="elements">The elements.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.CreateContextMenu(System.Boolean,System.Windows.Forms.ContextMenuStrip,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Creates the context menu for the selected object
            </summary>
            <param name="isLive">if set to <c>true</c> the display is in live mode.</param>
            <param name="contextMenuStrip">The context menu strip.</param>
            <param name="selectedElement">The selected element.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.GetOperations(System.Boolean,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Gets the operations associated with the specified display element
            </summary>
            <param name="isLive">if set to <c>true</c> the display is in live mode.</param>
            <param name="element">The element.</param>
            <returns>
            The operations
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnGetOperations(System.Boolean,Ace.Visualization.Resources.DisplayElement,System.Collections.Generic.List{Ace.Visualization.Resources.Operations.Operation})">
            <summary>
            Gets the operations associated with the display
            </summary>
            <param name="isLive">if set to <c>true</c> the display is in live mode.</param>
            <param name="element">The element.</param>
            <param name="operations">The operations.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.ArrangeTiles(Ace.Visualization.Display.Primitives.DxDevice,Ace.Visualization.Display.Primitives.Tiles.TileBase[])">
            <summary>
            Arranges the tiles associated with the object in the rendering context.
            </summary>
            <param name="device">The device.</param>
            <param name="tiles">The tiles to arrange.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.LayoutTilesBottom(System.Drawing.Rectangle,Ace.Visualization.Display.Primitives.Tiles.TileBase[])">
            <summary>
            Aligns the tiles along the bottom of the client rectangle starting at the left side.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="tiles">The tiles to arrange.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.LayoutTilesLowerLeft(System.Drawing.Rectangle,System.Int32,Ace.Visualization.Display.Primitives.Tiles.TileBase[])">
            <summary>
            Aligns the tiles along the left of the client rectangle starting at the bottom and working up.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="columnCount">The number of columns to shift content when a boundary collision is detected.</param>
            <param name="tiles">The tiles.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Select(Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Indicates the element associated with the object was selected.
            </summary>
            <param name="selectedElement">The selected element.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Unselect">
            <summary>
            Indicates the object was unselected.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.RegisterPointCapture(Ace.Visualization.Display.Primitives.DxPointCapture,Ace.Visualization.DxVector)">
            <summary>
            Registers a point capture event with the object
            </summary>
            <param name="pointCapture">The point capture information.</param>
            <param name="point">The selected point.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnRegisterPointCapture(Ace.Visualization.Display.Primitives.DxPointCapture,Ace.Visualization.DxVector)">
            <summary>
            Called when a point capture event occurs.
            </summary>
            <param name="pointCapture">The point capture information.</param>
            <param name="point">The selected point.</param>
            <returns>
            Has the point capture operation completed
            </returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.ValidateCaptureState(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Validates the state of the capture operation.
            </summary>
            <param name="device">The device.</param>
            <returns>True if the capture operation should be maintained</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnValidateCaptureState(Ace.Visualization.Display.Primitives.DxDevice)">
            <summary>
            Called when the point capture state needs to be validated. 
            </summary>
            <param name="device">The device.</param>
            <returns>True if the capture operation should be maintained</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.GetCollisionSources">
            <summary>
            Gets the collision sources associated with the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnGetCollisionSources">
            <summary>
            Called to return a set of collision sources
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.GetCollisionDetails(Ace.Visualization.Resources.CollisionSource)">
            <summary>
            Gets the collision details for the associated collision source
            </summary>
            <param name="source">The source.</param>
            <returns>The collision details</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnGetCollisionDetails(Ace.Visualization.Resources.CollisionSource)">
            <summary>
            Called when the primitives used for a collision check is required for a given collision source
            </summary>
            <param name="source">The source.</param>
            <returns>The collision details</returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.UpdateCollisionState(Ace.Visualization.Resources.CollisionSource[],Ace.Visualization.Resources.CollisionSource[])">
            <summary>
            Updates the state of the collision.
            </summary>
            <param name="collisions">The sources that resulted in a collision.</param>
            <param name="clear">The sources that were not a collision.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnUpdateCollisionState(Ace.Visualization.Resources.CollisionSource[],Ace.Visualization.Resources.CollisionSource[])">
            <summary>
            Called when the collision state should be updated.
            </summary>
            <param name="collisions">The sources that resulted in a collision.</param>
            <param name="clear">The sources that were not a collision.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.ClearCollisions">
            <summary>
            Clears all collision states.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.OnClearCollisions">
            <summary>
            Called when the collision state should be cleared.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Abstract3DObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.DisplayElement">
            <summary>
            Identifies a resource displayed at a specific location in the 3D coordinates
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.Name">
            <summary>
            Gets or sets the name of the display element
            </summary>
            <value>
            The name of the element.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.ParentName">
            <summary>
            Gets or sets the name of the parent object. This could be an element created
            by a different Abstract3DObject.
            </summary>
            <value>
            The name of the parent.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.VisibilityKey">
            <summary>
            Gets the name of they visibility group that dicates if this element is displayed.
            </summary>
            <value>
            The visibility key.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.ResourceKey">
            <summary>
            Gets the name of the resource that is to be displayed.
            </summary>
            <value>
            The name of the resource name / key.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.Location">
            <summary>
            Gets or sets the location of the object relative to any parent position
            </summary>
            <value>
            The location of the object
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.WorldLocation">
            <summary>
            Gets or sets the location of the object factoring in any parent positions
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.HoverText">
            <summary>
            Gets or sets any hover text associated with the element.
            </summary>
            <value>
            The text displayed when the element is hovered over
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.OwnerKey">
            <summary>
            Gets or sets the key identifying the owner (Abstract3DObject) of the element
            </summary>
            <value>
            The key / identifier describing the owner of the element.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.ShowBoundingBox">
            <summary>
            Gets or sets a value indicating whether the bouding box for an element should be displayed.
            </summary>
            <value>
              <c>true</c> if the bounding box should be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.IsColliding">
            <summary>
            Gets or sets a value indicating whether this instance is colliding.
            </summary>
            <value>
            <c>true</c> if this instance is colliding; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.DrawPriority">
            <summary>
            Gets or sets the drawing priority.
            </summary>
            <value>
            The drawing priority.
            </value>
            <remarks>Elements will be drawn starting with priority 1 and working up.</remarks>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.XScale">
            <summary>
            Get the scaling factor that is applied along the x-axis
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.YScale">
            <summary>
            Gets the scaling factor that is applied along the y-axis
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.DisplayElement.ZScale">
            <summary>
            Gets the scaling factor that is applied along the z-axis
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.DisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.DxTransform)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.DisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.#ctor(System.String,Ace.Visualization.Resources.Resource.VisualResource,Ace.Visualization.Resources.VisibilityGroup,Ace.Visualization.DxTransform)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.DisplayElement" /> class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="resource">The resource.</param>
            <param name="group">The group.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.DisplayElement" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            Sets the scaling factor along the x-axis, y-axis, and z-axis
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.op_Equality(Ace.Visualization.Resources.DisplayElement,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.op_Inequality(Ace.Visualization.Resources.DisplayElement,Ace.Visualization.Resources.DisplayElement)">
            <summary>
            Returns true the components of two objects are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.DisplayElement.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.VisibilityGroup">
            <summary>
            Class describing a group of elements that can be displayed or not displayed
            in a 3D visualization
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.IsVisible">
            <summary>
            Gets or sets a value indicating whether this grouping is visible.
            </summary>
            <value>
            <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.VisibilityKey">
            <summary>
            Gets the name of a key that will link all display elements associated with this
            visibility setting.
            </summary>
            <value>
            The visibility key.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.Category">
            <summary>
            Gets the category to which the grouping belongs to.
            </summary>
            <value>
            The category
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.Name">
            <summary>
            Gets the display name associated with the visibility grouping.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.Description">
            <summary>
            Gets the descriptiion.
            </summary>
            <value>
            The descriptiion.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.VisibilityGroup.SaveStateInRecording">
            <summary>
            Gets or sets a value indicating whether the visibility state should be saved in the recording on a frame by frame basis.
            </summary>
            <value>
              <c>true</c> if the visibility state should be saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ace.Visualization.Resources.VisibilityGroup.VisibilityChanged">
            <summary>
            Event thrown when the visibility changes.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.VisibilityGroup" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.VisibilityGroup" /> class.
            </summary>
            <param name="category">The category.</param>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="saveState">if set to <c>true</c> save the visibility state for the recording.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.OnVisibilityChanged">
            <summary>
            Called when the visibility changes.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.op_Equality(Ace.Visualization.Resources.VisibilityGroup,Ace.Visualization.Resources.VisibilityGroup)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.op_Inequality(Ace.Visualization.Resources.VisibilityGroup,Ace.Visualization.Resources.VisibilityGroup)">
            <summary>
            Returns true the components of two objects are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.VisibilityGroup.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontData">
            <summary>
            Represents all data from the Wavefront file
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>
            The working directory.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.Vertices">
            <summary>
            Gets the vertices.
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.Textures">
            <summary>
            Gets the textures.
            </summary>
            <value>
            The textures.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.Normals">
            <summary>
            Gets the normals.
            </summary>
            <value>
            The normals.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.Materials">
            <summary>
            Gets the materials.
            </summary>
            <value>
            The materials.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontData.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>
            The groups.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontData"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontData"/> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontData"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.AddFace(Ace.Visualization.Resources.Wavefront.WavefrontFace)">
            <summary>
            Adds the face.
            </summary>
            <param name="face">The face.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.PushGroup(System.String)">
            <summary>
            Pushes the group.
            </summary>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.PushGroupIfNotEmpty(System.String)">
            <summary>
            Pushes a new group if the current group is not empty.
            </summary>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.PushGroupIfNeeded">
            <summary>
            Pushes the group if needed.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.AddVertex(Ace.Visualization.DxVector)">
            <summary>
            Adds the vertex.
            </summary>
            <param name="vertex">The vertex.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.AddTexture(System.Drawing.PointF)">
            <summary>
            Adds the texture.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.AddNormal(Ace.Visualization.DxVector)">
            <summary>
            Adds the normal.
            </summary>
            <param name="normal">The normal.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.Push(Ace.Visualization.Resources.Wavefront.WavefrontMaterial)">
            <summary>
            Pushes the specified material.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.SetMaterial(System.String)">
            <summary>
            Sets the material.
            </summary>
            <param name="materialName">Name of the material.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.Transform(Ace.Visualization.DxTransform)">
            <summary>
            Transforms the points in the mesh representation.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.op_Equality(Ace.Visualization.Resources.Wavefront.WavefrontData,Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.op_Inequality(Ace.Visualization.Resources.Wavefront.WavefrontData,Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontData.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontFace">
            <summary>
            Represents vertex information describing a face
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFace"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontFace)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFace"/> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFace"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.AddVertex(Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex)">
            <summary>
            Adds the vertex.
            </summary>
            <param name="vertex">The vertex.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontFace.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex"/> with the specified index
            </summary>
            <value>
            The <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex"/>.
            </value>
            <param name="i">The i.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontFace.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.op_Equality(Ace.Visualization.Resources.Wavefront.WavefrontFace,Ace.Visualization.Resources.Wavefront.WavefrontFace)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.op_Inequality(Ace.Visualization.Resources.Wavefront.WavefrontFace,Ace.Visualization.Resources.Wavefront.WavefrontFace)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFace.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex">
            <summary>
            Represents a single vertex in the face
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex"/> struct.
            </summary>
            <param name="vertexIndex">Index of the vertex.</param>
            <param name="textureIndex">Index of the texture.</param>
            <param name="normalIndex">Index of the normal.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex" /> struct.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex.VertexIndex">
            <summary>
            Gets or sets the index of the vertex.
            </summary>
            <value>
            The index of the vertex.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex.TextureIndex">
            <summary>
            Gets or sets the index of the texture.
            </summary>
            <value>
            The index of the texture.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontFaceVertex.NormalIndex">
            <summary>
            Gets or sets the index of the normal.
            </summary>
            <value>
            The index of the normal.
            </value>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontGroup">
            <summary>
            Represents a wavefront group
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontGroup"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontGroup" /> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontGroup"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Material">
            <summary>
            Gets or sets the material.
            </summary>
            <value>
            The material.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Faces">
            <summary>
            Gets the faces.
            </summary>
            <value>
            The faces.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Center">
            <summary>
            Gets the XYZ center of the group
            </summary>
            <value>
            The average center of the grouping of vertices
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.AddFace(Ace.Visualization.Resources.Wavefront.WavefrontFace)">
            <summary>
            Adds the face.
            </summary>
            <param name="face">The face.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.CalculateCenter(System.Collections.Generic.IList{Ace.Visualization.DxVector})">
            <summary>
            Calculates the average center of the group
            </summary>
            <param name="vertices">The vertices associated with the object.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.op_Equality(Ace.Visualization.Resources.Wavefront.WavefrontGroup,Ace.Visualization.Resources.Wavefront.WavefrontGroup)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.op_Inequality(Ace.Visualization.Resources.Wavefront.WavefrontGroup,Ace.Visualization.Resources.Wavefront.WavefrontGroup)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontGroup.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontLoader">
            <summary>
            Loads a Wavefront data file
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontLoader"/> class.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoader.ParseLine(System.String,System.String)">
            <summary>
            Parses the line.
            </summary>
            <param name="keyword">The keyword.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoader.Load(System.String,System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontLoaderBase">
            <summary>
            Base class representing a stream loader class
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoaderBase.StartLoad(System.IO.Stream)">
            <summary>
            Starts the loading operation
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoaderBase.ParseLine">
            <summary>
            Parses the line.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontLoaderBase.ParseLine(System.String,System.String)">
            <summary>
            Parses the line.
            </summary>
            <param name="keyword">The keyword.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterial">
            <summary>
            Represents Material from a Wavefront file
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.VectorToColor(Ace.Visualization.DxVector)">
            <summary>
            Converts from the Wavefront OBJ representation (CIE-XYZ color space) to a RGB color. 
            </summary>
            <param name="xyzColor">Color of the xyz.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.VectorToArgb(Ace.Visualization.DxVector)">
            <summary>
            Converts from the Wavefront OBJ representation (CIE-XYZ color space) to a RGB color. 
            </summary>
            <param name="xyzColor">Color of the xyz.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterial"/> class.
            </summary>
            <param name="materialName">Name of the material.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontMaterial)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterial"/> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterial"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.AmbientColor">
            <summary>
            Gets or sets the color of the ambient.
            </summary>
            <value>
            The color of the ambient.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse.
            </summary>
            <value>
            The color of the diffuse.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.SpecularColor">
            <summary>
            Gets or sets the color of the specular.
            </summary>
            <value>
            The color of the specular.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.SpecularCoefficient">
            <summary>
            Gets or sets the specular coefficient.
            </summary>
            <value>
            The specular coefficient.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.IlluminationModel">
            <summary>
            Gets or sets the illumination model.
            </summary>
            <value>
            The illumination model.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.AmbientTextureMap">
            <summary>
            Gets or sets the ambient texture map.
            </summary>
            <value>
            The ambient texture map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.DiffuseTextureMap">
            <summary>
            Gets or sets the diffuse texture map.
            </summary>
            <value>
            The diffuse texture map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.SpecularTextureMap">
            <summary>
            Gets or sets the specular texture map.
            </summary>
            <value>
            The specular texture map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.SpecularHighlightTextureMap">
            <summary>
            Gets or sets the specular highlight texture map.
            </summary>
            <value>
            The specular highlight texture map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.BumpMap">
            <summary>
            Gets or sets the bump map.
            </summary>
            <value>
            The bump map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.DisplacementMap">
            <summary>
            Gets or sets the displacement map.
            </summary>
            <value>
            The displacement map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.StencilDecalMap">
            <summary>
            Gets or sets the stencil decal map.
            </summary>
            <value>
            The stencil decal map.
            </value>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.AlphaTextureMap">
            <summary>
            Gets or sets the alpha texture map.
            </summary>
            <value>
            The alpha texture map.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.op_Equality(Ace.Visualization.Resources.Wavefront.WavefrontMaterial,Ace.Visualization.Resources.Wavefront.WavefrontMaterial)">
            <summary>
            Returns true the components of two object are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.op_Inequality(Ace.Visualization.Resources.Wavefront.WavefrontMaterial,Ace.Visualization.Resources.Wavefront.WavefrontMaterial)">
            <summary>
            Returns true the components of two object are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterial.GetHashCode">
            <summary>
            Return a hash code for this object.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader">
            <summary>
            Class for loading wavefront material files
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader"/> class.
            </summary>
            <param name="materialLibrary">The material library.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.AddParseAction(System.String,System.Action{System.String})">
            <summary>
            Adds the parse action.
            </summary>
            <param name="key">The key.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.ParseLine(System.String,System.String)">
            <summary>
            Parses the line.
            </summary>
            <param name="keyword">The keyword.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.GetKeywordAction(System.String)">
            <summary>
            Gets the keyword action.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.PushMaterial(System.String)">
            <summary>
            Pushes the material.
            </summary>
            <param name="materialName">Name of the material.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.ParseVec3(System.String)">
            <summary>
            Parses the vec3.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.Load(System.IO.Stream)">
            <summary>
            Loads the specified line stream.
            </summary>
            <param name="lineStream">The line stream.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader.Load(System.String)">
            <summary>
            Loads the specified material file name.
            </summary>
            <param name="materialFileName">Name of the material file.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.TypeParserBase">
            <summary>
            Base class defining parsers for the different sections of the file
            </summary>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.TypeParserBase.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.TypeParserBase.CanParse(System.String)">
            <summary>
            Determines whether this instance can parse the specified keyword.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.TypeParserBase.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.GroupParser">
            <summary>
            Parse a wavefront grouping
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.GroupParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.GroupParser"/> class.
            </summary>
            <param name="groupDataStore">The group data store.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.GroupParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.GroupParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.UseMaterialParser">
            <summary>
            Parse a wavefront "Use Material" item
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.UseMaterialParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.UseMaterialParser"/> class.
            </summary>
            <param name="elementGroup">The element group.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.UseMaterialParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.UseMaterialParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.FaceParser">
            <summary>
            Parse a wavefront "Face" item
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.FaceParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.FaceParser"/> class.
            </summary>
            <param name="faceGroup">The face group.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.FaceParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.FaceParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.FaceParser.ParseFaceVertex(System.String)">
            <summary>
            Parses the face vertex.
            </summary>
            <param name="vertexString">The vertex string.</param>
            <returns>The face vertex</returns>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.NormalParser">
            <summary>
            Parse a wavefront "Normal" item
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.NormalParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.NormalParser"/> class.
            </summary>
            <param name="normalDataStore">The normal data store.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.NormalParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.NormalParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.VertexParser">
            <summary>
            Parse a wavefront "Vertex" item
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.VertexParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.VertexParser"/> class.
            </summary>
            <param name="vertexDataStore">The vertex data store.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.VertexParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.VertexParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.TextureParser">
            <summary>
            Parse a wavefront "Texture" item
            </summary>	
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.TextureParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.TextureParser"/> class.
            </summary>
            <param name="textureDataStore">The texture data store.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.TextureParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.TextureParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Resources.Wavefront.MaterialLibraryParser">
            <summary>
            Parse a wavefront "Material Library" item
            </summary>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.MaterialLibraryParser.#ctor(Ace.Visualization.Resources.Wavefront.WavefrontData,Ace.Visualization.Resources.Wavefront.WavefrontMaterialLoader)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.Resources.Wavefront.MaterialLibraryParser" /> class.
            </summary>
            <param name="materialDataStore">The material data store.</param>
            <param name="libraryLoaderFacade">The library loader facade.</param>
        </member>
        <member name="P:Ace.Visualization.Resources.Wavefront.MaterialLibraryParser.Keyword">
            <summary>
            Gets the keyword for the parser
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="M:Ace.Visualization.Resources.Wavefront.MaterialLibraryParser.Parse(System.String)">
            <summary>
            Parses the specified line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.Visualization.Component">
            <summary>
            Represents a component that manages object lifetime
            </summary>
        </member>
        <member name="P:Ace.Visualization.Component.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Component.IsDisposing">
            <summary>
            Gets a value indicating whether this instance is disposing.
            </summary>
            <value>
            <c>true</c> if this instance is disposing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Visualization.Component.DisposeCollector">
            <summary>
            Gets or sets the disposables.
            </summary>
            <value>The disposables.</value>
        </member>
        <member name="E:Ace.Visualization.Component.Disposing">
            <summary>
            Occurs when when Dispose is called.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Component.ToDispose``1(``0)">
            <summary>
            Adds a disposable object to the list of the objects to dispose.
            </summary>
            <param name="toDisposeArg">To dispose.</param>
        </member>
        <member name="M:Ace.Visualization.Component.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose a disposable object and set the reference to null. Removes this object from the ToDispose list.
            </summary>
            <param name="objectToDispose">Object to dispose.</param>
        </member>
        <member name="M:Ace.Visualization.Component.RemoveAndDisposeCollection(System.Collections.IEnumerable)">
            <summary>
            Dispose a disposable object and set the reference to null. Removes this object from the ToDispose list.
            </summary>
            <param name="collectionToDispose">The collection to dispose.</param>
        </member>
        <member name="M:Ace.Visualization.Component.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:Ace.Visualization.Component.Dispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="T:Ace.Visualization.DxVector">
            <summary>
            A 3D vector class.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.Identity">
            <summary>
            An identity vector (zero position).
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Equality(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Determines equality of two vectors. Each component must be equal.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Inequality(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Determines inequality of two vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Multiply(Ace.Visualization.DxVector,System.Single)">
            <summary>
            Multiplies each element of a vector by a scalar;
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Multiply(System.Single,Ace.Visualization.DxVector)">
            <summary>
            Multiplies each element of a vector by a scalar;
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Addition(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Adds two vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_Subtraction(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Subtracts two vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.op_UnaryNegation(Ace.Visualization.DxVector)">
            <summary>
            Negates a vector.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create a vector from the specified X, Y, and Z offsets.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Visualization.DxVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Visualization.DxVector.Scale(System.Single)">
            <summary>
            Multiplies the elements of the vector by the specified value.
            </summary>		
        </member>
        <member name="M:Ace.Visualization.DxVector.Normalize">
            <summary>
            Scales the vector to give it a length of 1.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.Cross(Ace.Visualization.DxVector)">
            <summary>
            Return the cross product 'this x r', a vector in the plane perpendicular to this and r,
            with magnitude equal to the products of the magnitudes and the sine of the angle between
            the vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.AngleBetween(Ace.Visualization.DxVector)">
            <summary>
            Return the angle from this vector to the vector a, in degrees.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.Dot(Ace.Visualization.DxVector)">
            <summary>
            Returns the dot product of this vector and r, returning a scalar with value equal to the sum of the
            products of the components of the two vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.GetHashCode">
            <summary>
            Returns a hash code for this vector.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.Equals(System.Object)">
            <summary>
            Return true if this is equal to the specified object.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.Length">
            <summary>
            Gets the length of this vector.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.LengthSquared">
            <summary>
            Gets the square of the length of this vector.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.DX">
            <summary>
            Gets the X component of this vector.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.DY">
            <summary>
            Gets the Y component of this vector.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxVector.DZ">
            <summary>
            Gets the Z component of this vector.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.ToArray">
            <summary>
            Returns an array version of this vector, in the form [DX, DY, DZ].
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxVector.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Visualization.ImageResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.media_beginning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.media_end">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.media_pause">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.media_play">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.node">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.record">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.recording">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.recordingSave">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.ruler">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.rulerPoint1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.rulerPoint2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_rotation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_scene_graph">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_select">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_selection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_transform">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_back">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_bottom">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_front">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_isometric">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_view_top">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.tile_zoom">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.window">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.window_split_four">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.window_split_hor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Visualization.ImageResources.window_split_ver">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Ace.Visualization.GuiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Button_Accept">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Button_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Button_Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.CollisionConfigurationControl_Enabled">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.CollisionConfigurationControl_ExecutionTime">
            <summary>
              Looks up a localized string similar to Average Time.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.CollisionConfigurationControl_Source1">
            <summary>
              Looks up a localized string similar to Source 1.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.CollisionConfigurationControl_Source2">
            <summary>
              Looks up a localized string similar to Source 2.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.CollisionSourceSelectionForm_SelectSource">
            <summary>
              Looks up a localized string similar to Select Collision Source {0}.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.FactoryFloor_Category">
            <summary>
              Looks up a localized string similar to Factory Floor.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.FactoryFloor_Description">
            <summary>
              Looks up a localized string similar to Shows or Hides the factory floor tile display.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.FactoryFloor_Name">
            <summary>
              Looks up a localized string similar to Tiles.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.RecordingManager_DefaultExtension">
            <summary>
              Looks up a localized string similar to .awp3d.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Ruler_Category">
            <summary>
              Looks up a localized string similar to Ruler.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Ruler_Description">
            <summary>
              Looks up a localized string similar to Shows or Hides the ruler for measuring distances.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Ruler_Name">
            <summary>
              Looks up a localized string similar to Ruler.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.RulerObject_HoverText_DXYZ">
            <summary>
              Looks up a localized string similar to Dx: {0:F3} Dy: {1:F3} Dz: {2:F3}.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.RulerObject_HoverText_Length">
            <summary>
              Looks up a localized string similar to Length: {0:F3} mm.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.RulerObject_SelectPoint1">
            <summary>
              Looks up a localized string similar to Select Point 1.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.RulerObject_SelectPoint2">
            <summary>
              Looks up a localized string similar to Select Point 2.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.SaveTile_FileFilter">
            <summary>
              Looks up a localized string similar to (*.awp3d)|*.awp3d|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_CameraChange">
            <summary>
              Looks up a localized string similar to Reposition Camera.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_ChangeViewport">
            <summary>
              Looks up a localized string similar to Change Viewport.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Collisions">
            <summary>
              Looks up a localized string similar to Collisions.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Description">
            <summary>
              Looks up a localized string similar to Description:.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_FourByFour">
            <summary>
              Looks up a localized string similar to Four Windows.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_HorizontalSplit">
            <summary>
              Looks up a localized string similar to Horizontal Split.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Measure">
            <summary>
              Looks up a localized string similar to Measure.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Name">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewBack">
             <summary>
               Looks up a localized string similar to Back
            (CTRL-2).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewBottom">
             <summary>
               Looks up a localized string similar to Bottom
            (CTRL-4).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewFront">
             <summary>
               Looks up a localized string similar to Front
            (CTRL-1).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewIsometric">
             <summary>
               Looks up a localized string similar to Isometric
            (CTRL-7).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewLeftSide">
             <summary>
               Looks up a localized string similar to Left Side
            (CTRL-5).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewRightSide">
             <summary>
               Looks up a localized string similar to Right Side
            (CTRL-6).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_PresetViewTop">
             <summary>
               Looks up a localized string similar to Top
            (CTRL-3).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Record">
            <summary>
              Looks up a localized string similar to Record.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Rotate">
             <summary>
               Looks up a localized string similar to Rotate
            (SHIFT).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Ruler">
            <summary>
              Looks up a localized string similar to Measurement Ruler.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_SceneGraph">
            <summary>
              Looks up a localized string similar to Scene Graph.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Selection">
            <summary>
              Looks up a localized string similar to Selection.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_SingleWindow">
            <summary>
              Looks up a localized string similar to Single Window.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Translate">
             <summary>
               Looks up a localized string similar to Translate
            (ALT).
             </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_VerticalSplit">
            <summary>
              Looks up a localized string similar to Vertical Split.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Visibility">
            <summary>
              Looks up a localized string similar to Visibility.
            </summary>
        </member>
        <member name="P:Ace.Visualization.GuiText.Simulation3DControl_Zoom">
            <summary>
              Looks up a localized string similar to Zoom.
            </summary>
        </member>
        <member name="T:Ace.Visualization.Extensions">
            <summary>
            Helper Extension methods 
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.CollisionColor(System.Drawing.Color)">
            <summary>
            Calculates the color to use in a collision.
            </summary>
            <param name="color">The color.</param>
            <returns>The collision color</returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToSharpDX(System.Drawing.Color)">
            <summary>
            Convert from Windows.Drawing color format to SharpDX color format.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToColor4(System.Drawing.Color)">
            <summary>
            Convert from Windows.Drawing color format to Color4 format.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToVector3(Ace.Visualization.DxVector)">
            <summary>
            Convert from DxVector to Vector3
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToVector3(Ace.Visualization.DxVector[])">
            <summary>
            Convert from DxVector to Vector3
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToMatrix3x2(Ace.Visualization.DxVector)">
            <summary>
            Convert from Vector3 to DxVector
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToDxVector(SharpDX.Vector3)">
            <summary>
            Convert from Vector3 to DxVector
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.ScaleVector(SharpDX.Vector3,System.Single)">
            <summary>
            Multiplies the elements of the vector by the specified value.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.Dot(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns the dot product of this vector and r, returning a scalar with value equal to the sum of the
            products of the components of the two vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.LengthSquared(SharpDX.Vector3)">
            <summary>
            Gets the square of the length of this vector.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.NormalizeVector(SharpDX.Vector3)">
            <summary>
            Scales the vector to give it a length of 1.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.CrossVector(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Return the cross product 'this x r', a vector in the plane perpendicular to this and r,
            with magnitude equal to the products of the magnitudes and the sine of the angle between
            the vectors.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.AngleBetween(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Return the angle from this vector to the vector a, in degrees.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.ComputeNormal(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Compute a normal from three points: (clock0-clock1) x (clock2-clock1).
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.ComputeNormal(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Compute a normal from three points: (clock0-clock1) x (clock2-clock1).
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.ToMatrix(Ace.Visualization.DxTransform)">
            <summary>
            Converts the transformation to a matrix form.
            </summary>
        </member>
        <member name="M:Ace.Visualization.Extensions.DoesKeyExist(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            Check if the key exsits in the serialization info data structure.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="key">The key to look for.</param>
            <returns>Does the key exist</returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.DeserializeString(System.Runtime.Serialization.SerializationInfo,System.String,System.String)">
            <summary>
            Deserializes a string
            </summary>
            <param name="info">The information.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The deserailized value
            </returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.DeserializeInt32(System.Runtime.Serialization.SerializationInfo,System.String,System.Int32)">
            <summary>
            Deserializes the int32.
            </summary>
            <param name="info">The information.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.DeserializeSingle(System.Runtime.Serialization.SerializationInfo,System.String,System.Single)">
            <summary>
            Deserializes the single.
            </summary>
            <param name="info">The information.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.Extensions.Deserialize(System.Runtime.Serialization.SerializationInfo,System.String,Ace.Visualization.DxTransform)">
            <summary>
            Deserializes a DxTransform.
            </summary>
            <param name="info">The information.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Visualization.DxTransform">
            <summary>
            Represents a 3D transformation compatible with DirectX
            </summary>
        </member>
        <member name="T:Ace.Visualization.DxTransform.Euler">
            <summary>
            Defines the order of Euler angles that are supported 
            by the DxTransform class.
            </summary>
        </member>
        <member name="F:Ace.Visualization.DxTransform.Euler.Xyz">
            <summary>
            X-Y-Z Euler angles, in which the order of rotations is a rotation about X, followed
            by a rotation about the "new" Y axis after the initial rotation, followed by a 
            rotation about the "new" Z axis.
            </summary>
        </member>
        <member name="F:Ace.Visualization.DxTransform.Euler.Zyz">
            <summary>
            Z-Y-Z Euler angles, in which the order of rotations is a rotation about Z, followed
            by a rotation about the "new" Y axis after the initial rotation, followed by a 
            rotation about the "new" Z axis.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.DefaultEulerAngles">
            <summary>
            Default Euler angles selection used when displaying and converting transforms.
            The default is "Z-Y-Z".
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.Identity">
            <summary>
            An identity transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.op_Equality(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform)">
            <summary>
            Returns true the components of two transforms are identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.op_Inequality(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform)">
            <summary>
            Returns true the components of two transforms are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.RX(System.Single)">
            <summary>
            Returns a new transform, rotated by specified degrees about the X axis from this transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.RY(System.Single)">
            <summary>
            Returns a new transform, rotated by specified degrees about the Y axis from this transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.RZ(System.Single)">
            <summary>
            Returns a transform representing a rotation about the Z axis.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.ToRadians(System.Single)">
            <summary>
            Convert degrees to radians.
            </summary>
            <param name="degrees">Number of degrees to convert.</param>
            <returns>Equivalent number of radians.</returns>
        </member>
        <member name="M:Ace.Visualization.DxTransform.ToDegrees(System.Single)">
            <summary>
            Convert radians to degrees.
            </summary>
            <param name="radians">Number of radians to convert.</param>
            <returns>Equivalent number of degrees.</returns>
        </member>
        <member name="M:Ace.Visualization.DxTransform.op_Multiply(Ace.Visualization.DxTransform,Ace.Visualization.DxVector)">
            <summary>
            Transforms the vector b by rotating it through transform A. Does NOT translate.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.TransformPoint(Ace.Visualization.DxTransform,Ace.Visualization.DxVector)">
            <summary>
            Transforms the coordinates of b into the base coordinate frame of a.
            Same as (a*b)+a.offset.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.op_Multiply(Ace.Visualization.DxTransform,Ace.Visualization.DxTransform)">
            <summary>
            Returns a new transform representing the product of two transforms.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.op_UnaryNegation(Ace.Visualization.DxTransform)">
            <summary>
            Returns a inverse of a transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxVector)">
            <summary>
            Create a transform with the specified origin.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Sets the components of the transform with no identity orientation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a transform using the default rotation selection.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxTransform.Euler,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the components of the transform using the specified Euler angle definition.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxTransform.Euler,System.Single[])">
            <summary>
            Sets the components of the transform using the specified Euler angle definition.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxTransform,Ace.Visualization.DxVector)">
            <summary>
            Create a transform from a frame composed of the origin, a point on the X axis, 
            and the Z-axis of the origin transformation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Create a transform from a frame composed of the origin, a point on the X axis, 
            and a point in the positive-Y side of the XY plane.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Set this transform using the specified origin and axis-angle representation.
            </summary>
            <param name="origin">The X-Y-Z position of the origin.</param>
            <param name="axis">The axis about which to rotate, with the magnitude of the vector
            giving the number of radians to rotate.</param>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector,Ace.Visualization.DxVector)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.DxTransform"/> class.
            </summary>
            <param name="origin">The offset of the transformation.</param>
            <param name="xAxis">The vector defining the orientation of the X axis.</param>
            <param name="yAxis">The vector defining the orientation of the Y axis.</param>
            <param name="zAxis">The vector defining the orientation of the Z axis.</param>
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Visualization.DxTransform.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		        
        </member>
        <member name="M:Ace.Visualization.DxTransform.#ctor(Ace.Visualization.Recorder.IDeseralizationStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Visualization.DxTransform" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Serialize(Ace.Visualization.Recorder.ISeralizationStream)">
            <summary>
            Serializes the object to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.GetHashCode">
            <summary>
            Return a hash code for this transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.DistanceFrom(Ace.Visualization.DxTransform)">
            <summary>
            Return the distance from this transform to the specified one.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.AlignZ">
            <summary>
            Returns a transformation with the Z axis aligned with the closest world axis,
            and minimal rotation.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.AlignZ(Ace.Visualization.DxVector)">
            <summary>
            Returns a transformation with the Z axis aligned with the specified axis,
            with minimal rotation around Z. The X-axis change is minimized.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.RotationAxisAngle">
            <summary>
            Gets the axis and magnitude of the rotation matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Visualization.DxTransform.ToArray(Ace.Visualization.DxTransform.Euler)">
            <summary>
            Return a six-element array containing the X-Y-Z offsets and the specified
            angular representation of this transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.ToArray">
            <summary>
            Convert to an array of doubles using the default set of Euler angles.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Scale(System.Single)">
            <summary>
            Returns a uniformly scaled version of this transform.
            </summary>
            <param name="scaleFactor">Scale factor by which to multiply this transform's offset.</param>
            <returns>Scaled transform.</returns>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Shift(System.Single,System.Single,System.Single)">
            <summary>
            Returns a transform equal to this transform shifted by the specified 
            x, y, and z distances in world coordinates (see V+ SHIFT function).
            "trans.Shift(dx, dy, dz)" is equivalent to "new Transform(dx, dy, dz) * trans".
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Interpolate(Ace.Visualization.DxTransform,System.Single)">
            <summary>
            Returns a transform equal to the specified fraction of the distance from this
            to the next transform.
            </summary>
        </member>
        <member name="M:Ace.Visualization.DxTransform.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Returns a scaled version of this transform, with different scale factors along each axis.
            </summary>
            <returns>Scaled transform.</returns>
        </member>
        <member name="M:Ace.Visualization.DxTransform.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:Ace.Visualization.DxTransform.Offset">
            <summary>
            Gets the XYZ offset associated with the transform.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Visualization.DxTransform.DX">
            <summary>
            Gets the X component of this transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.DY">
            <summary>
            Gets the Y component of this transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.DZ">
            <summary>
            Gets the Z component of this transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.Yaw">
            <summary>
            Gets the Yaw component of this transformation.
            </summary>
            <value>The yaw.</value>
        </member>
        <member name="P:Ace.Visualization.DxTransform.Pitch">
            <summary>
            Gets the Pitch component of this transformation.
            </summary>
            <value>The pitch.</value>
        </member>
        <member name="P:Ace.Visualization.DxTransform.Roll">
            <summary>
            Gets the Roll component of this transformation.
            </summary>
            <value>The roll.</value>
        </member>
        <member name="P:Ace.Visualization.DxTransform.XAxis">
            <summary>
            Gets the X-axis of this transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.YAxis">
            <summary>
            Gets the Y-axis of this transform.
            </summary>
        </member>
        <member name="P:Ace.Visualization.DxTransform.ZAxis">
            <summary>
            Gets the Z-axis of this transform.
            </summary>
        </member>
    </members>
</doc>
